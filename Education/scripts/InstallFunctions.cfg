# Function to install Webmin
webmin()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/webmin.txt ]; then
		echo "1" > $PWD/flags/webmin.txt || error_exit "$LINENO: File creation failed."
	fi

	setWebminFirewall;
	webminInstall;

	return
}


# Function to install Samba
samba()
{
	if [ "$hostedserver" == 0 ]; then

		# Check to see if beenrun file exists. If not, create it.
		if [ ! -e $PWD/flags/samba.txt ]; then
			echo "1" > $PWD/flags/samba.txt || error_exit "$LINENO: File creation failed."
		fi

		setSambaFirewall;
		downInstSamba;
		sambaAddUsers;
	else
		echo "#############################################################"
		echo " "
		echo "This is a virtual server hosted by a third party. As such,"
		echo "Samba cannot be installed for security reasons."
		echo " "
		read -p "Please press enter to return to the previous menu. "
	fi

	return
}


# Function to install Plex Media Server
plex()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/plex.txt ]; then
		echo "1" > $PWD/flags/plex.txt || error_exit "$LINENO: File creation failed."
	fi

	setPlexFirewall;
	downInstPlex;
	mediaFolderCreation;

	return
}


# Function to install ownCloud
ownCloud()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/ownCloud.txt ]; then
		echo "1" > $PWD/flags/ownCloud.txt || error_exit "$LINENO: File creation failed."
	fi

	getHTTPPorts;
	setApacheFirewall;
	setOwnCloudFirewall;
	setSambaFirewall;
	getOwnCloudHostname;
	getMariaDBData;
	getOwnCloudData;
	getMaxSize;
	installApache;
	setFQDN;
	installOwnCloud;
	getCertificateData;
	setSiteHostnames $ochostname $domainname;
	generateSelfSignedCert;
	createMariaDBExpectScript;
	createOCExpectScripts;
	generateOwnCloudScripts;
	secureApache;
	secureMariaDB;
	setEmail;
	ownCloudDBConfig;
	ownCloudWebConfig;
	consolidateOwncloud;
	if [ "$letsencrypt" == 1 ]; then
		renewLetsEncrypt;
	fi
	secureOwnCloud;
	apacheLogs;
	ownCloudLogs;
	MariaDBCleanup;
	ownCloudCleanup;
	finalCleanUp;

	return
}


# Function to install VirtualBox
VirtualBox()
{
	if [ "$physicalsystem" == 1 ]; then

		# Check to see if beenrun file exists. If not, create it.
		if [ ! -e $PWD/flags/VirtualBox.txt ]; then
			echo "1" > $PWD/flags/VirtualBox.txt || error_exit "$LINENO: File creation failed."
		fi

		getHTTPPorts;
		setApacheFirewall;
		setPHPVirtualBoxFirewall;
		getphpvbHostname;
		getMaxSize;
		getMariaDBData;
		installApache;
		setFQDN;
		installVirtualBox;
		getCertificateData;
		setSiteHostnames $phpvbhostname $domainname;
		generateSelfSignedCert;
		createMariaDBExpectScript;
		secureApache;
		secureMariaDB;
		setEmail;
		phpvbWebConfig;
		if [ "$letsencrypt" == 1 ]; then
			renewLetsEncrypt;
		fi
		apacheLogs;
		virtualBoxLogs;
		MariaDBCleanup;
		phpvbCleanup;
		finalCleanUp;

	else
		echo "######################################################################"
		echo " "
		echo "This is a virtual server. As such, VirtualBox should not be installed."
		echo " "
		read -p "Please press enter to return to the previous menu. "
	fi

	return
}


# Function to install Netdata
Netdata()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/Netdata.txt ]; then
		echo "1" > $PWD/flags/Netdata.txt || error_exit "$LINENO: File creation failed."
	fi

	getHTTPPorts;
	setApacheFirewall;
	getNetdataHostname;
	getMaxSize;
	getMariaDBData;
	installApache;
	setFQDN;
	installNetdata;
	getCertificateData;
	setSiteHostnames $ndhostname $domainname;
	generateSelfSignedCert;
	createMariaDBExpectScript;
	secureApache;
	secureMariaDB;
	setEmail;
	netdataWebConfig;
	if [ "$letsencrypt" == 1 ]; then
		renewLetsEncrypt;
	fi
	apacheLogs;
	netdataLogs;
	MariaDBCleanup;
	netdataCleanup;
	finalCleanUp;

	return
}
