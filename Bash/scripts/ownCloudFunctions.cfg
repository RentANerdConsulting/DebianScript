# Function to input clients generated secure passwords for MariaDB and ownCloud
getOwnCloudData()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/getOwnCloudData.txt ]; then
		echo "0" > $PWD/flags/getOwnCloudData.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/getOwnCloudData.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		correct="n"
		until [ "$correct" == "y" ]; do
			echo " "
			echo "############ Input ownCloud data ############"
			echo "#############################################"
            		echo " "
			echo "Generate random password for the ownCloud database using Keepass2."
			echo " "
        		echo "Log this password as $clientname -> $hostname -> owncloud_database, as it may be needed later for maintenance."
        		echo " "
        		read -p "Enter ownCloud database password: " ocdbpass
        		echo " "
			echo "Generate random password for the $currentuser ownCloud admin account using Keepass2."
        		echo " "
        		echo "Log this password as $clientname -> $hostname -> owncloud_admin, with user name $currentuser, as it may be needed later for maintenance."
			echo " "
			read -p "Enter ownCloud admin password: " ocadminpass
        		echo " "
            		echo "ownCloud database password: $ocdbpass"
            		echo "ownCloud admin password: $ocadminpass"
			echo " "
			read -p "Is this correct? y/n: " correct
			if [ "$correct" != "y" ]; then
				errorTracking;
			fi
		done

		beenrun=1
		echo $beenrun > $PWD/flags/getOwnCloudData.txt || error_exit "$LINENO: File edit failed."
		echo $ocdbpass > $PWD/flags/ocdbpass.txt || error_exit "$LINENO: File edit failed."
		echo $ocadminpass > $PWD/flags/ocadminpass.txt || error_exit "$LINENO: File edit failed."
	else
		return
	fi

	return
}


# Function to get max upload size for PHP and ownCloud
getMaxSize()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/getMaxSize.txt ]; then
		echo "0" > $PWD/flags/getMaxSize.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/getMaxSize.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		correct="n"
		until [ "$correct" == "y" ]; do
            		echo " "
			echo "############ Input maximum upload file size for PHP and ownCloud ############"
			echo "#############################################################################"
			echo " "
			read -p "Enter maximum allowed upload file size in MB, ie: 512 (default for ownCloud): " maxuploadMBtemp
			echo " "
			echo "Maximum allowed upload file size: $maxuploadMBtemp MB"
			read -p "Is this correct? y/n: " correct
			if [ "$correct" == "y" ]; then

				# convert user input to byte based number
				maxuploadMB=$((maxuploadMBtemp*uploadbase))

				# set php session ram to 128MB, to allow multiple simultaneous sessions
				maxuploadMBRAM=134217728
			else
				errorTracking;
			fi
		done

		beenrun=1
		echo $beenrun > $PWD/flags/getMaxSize.txt || error_exit "$LINENO: File edit failed."
		echo $maxuploadMB > $PWD/flags/maxupload.txt || error_exit "$LINENO: File creation failed."
		echo $maxuploadMBRAM > $PWD/flags/maxuploadram.txt || error_exit "$LINENO: File creation failed."
		echo $maxuploadMBtemp > $PWD/flags/maxuploadtemp.txt || error_exit "$LINENO: File creation failed."
	else
		return
	fi

	return
}


# Function to download and install ownCloud
installOwnCloud()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/installOwnCloud.txt ]; then
		echo "0" > $PWD/flags/installOwnCloud.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/installOwnCloud.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		echo " "
		echo "############ Installing PHP 7, MariaDB, and ownCloud ############"
		echo "#################################################################"
		echo " "
		echo "If prompted by MariaDB install, do not enter a root password."
		echo "The install may ask several times. Ignore this."
		echo " "
		read -p "Press enter to continue: "

		# download and install owncloud key, then add repo to sources lists
		sudo wget -nv https://download.owncloud.org/download/repositories/stable/Ubuntu_16.04/Release.key -O Release.key || error_exit "$LINENO: Key download failed."
		sudo apt-key add - < Release.key || error_exit "$LINENO: Key add failed."
		sudo rm Release.key
		if [ ! -e /etc/apt/sources.list.d/owncloud.list ]; then
			sudo sh -c "echo 'deb http://download.owncloud.org/download/repositories/stable/Ubuntu_16.04/ /' >> /etc/apt/sources.list.d/owncloud.list" || error_exit "$LINENO: Source add failed."
		fi

		# install owncloud and related packages/programs
		sudo apt-get update && sudo apt-get -y install owncloud php7.0-bz2 php7.0-ldap php-memcache php-imagick php-apcu libreoffice-writer libreoffice-java-common default-jre librdf-storage-mysql libreoffice-style-breeze libreoffice-style-hicontrast libreoffice-style-human libreoffice-style-oxygen libreoffice-style-sifr libreoffice-style-tango fonts-crosextra-caladea fonts-crosextra-carlito default-java-plugin ispell php-redis redis-server || error_exit "$LINENO: Installation failed."
		wait

		# Install smbclient if not hosted on a third party server
		if [ "$hostedserver" == 0 ]; then
			sudo apt-get update && sudo apt-get -y install smbclient php-smbclient || error_exit "$LINENO: Installation failed."
		fi

		# apply initial owncloud file/folder ownership and permissions
		sudo chown -R www-data:www-data /var/www/owncloud || error_exit "$LINENO: Setting file permisions failed."
		sudo chmod -R 755 /var/www/owncloud || error_exit "$LINENO: Setting file permisions failed."

		beenrun=1
		echo $beenrun > $PWD/flags/installOwnCloud.txt || error_exit "$LINENO: File edit failed."
	else
		return
	fi

	return
}


# Function to create necessary Expect scripts
createOCExpectScripts()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/createOCExpectScripts.txt ]; then
		echo "0" > $PWD/flags/createOCExpectScripts.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/createOCExpectScripts.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		echo " "
		echo "############ Generating ownCloud configuration script ############"
		echo "##################################################################"

		# Create Expect script used to configure ownCloud database
		echo '#!/usr/bin/expect' | tee $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File creation failed."
		echo ' ' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'spawn sudo mysql -u root -p' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'expect "Enter password: "' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'send "mdbrootpass"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'expect "MariaDB \\\[(none)]>"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'send "CREATE DATABASE owncloud;\r"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'expect "MariaDB \\\[(none)]>"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'send "GRANT ALL PRIVILEGES ON owncloud.* to 'owncloud'@'localhost' IDENTIFIED BY 'ocdbpass';\r"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'expect "MariaDB \\\[(none)]>"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'send "FLUSH PRIVILEGES;\r"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'expect "MariaDB \\\[(none)]>"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		echo 'send "exit\r"' >> $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		sudo sed -i "s:owncloud@localhost:'owncloud'@'localhost':" $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		sudo sed -i "s:ocdbpass:'ocdbpass':" $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		sudo chmod +x $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: Setting file permisions failed."

		beenrun=1
		echo $beenrun > $PWD/flags/createOCExpectScripts.txt || error_exit "$LINENO: File edit failed."
	else
		return
	fi

	return
}


# Function to generate ownCloud file permission scripts
generateOwnCloudScripts()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/generateOwnCloudScripts.txt ]; then
		echo "0" > $PWD/flags/generateOwnCloudScripts.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/generateOwnCloudScripts.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		echo " "
		echo "############ Generating ownCloud file permissions scripts ############"
		echo "######################################################################"

		# Generating script to lock down file permissions
		echo '#!/bin/bash' | tee $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File creation failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo "ocpath='/var/www/owncloud'" >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo "htuser='www-data'" >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo "htgroup='www-data'" >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo "rootuser='root'" >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'printf "Creating possible missing Directories\n"' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo "mkdir -p $ocpath/data" >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo "mkdir -p $ocpath/assets" >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo "mkdir -p $ocpath/updater" >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'printf "chmod Files and Directories\n"' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'find ${ocpath}/ -type f -print0 | xargs -0 chmod 0640' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'find ${ocpath}/ -type d -print0 | xargs -0 chmod 0750' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'printf "chown Directories\n"' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'chown -R ${rootuser}:${htgroup} ${ocpath}/' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'chown -R ${htuser}:${htgroup} ${ocpath}/apps/' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'chown -R ${htuser}:${htgroup} ${ocpath}/assets/' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'chown -R ${htuser}:${htgroup} ${ocpath}/config/' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'chown -R ${htuser}:${htgroup} ${ocpath}/data/' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		#echo 'chown -R ${htuser}:${htgroup} ${ocpath}/themes/' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'chown -R ${htuser}:${htgroup} ${ocpath}/updater/' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'chmod +x ${ocpath}/occ' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'printf "chmod/chown .htaccess\n"' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'if [ -f ${ocpath}/.htaccess ]; then' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
  		echo '	chmod 0644 ${ocpath}/.htaccess' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
  		echo '	chown ${rootuser}:${htgroup} ${ocpath}/.htaccess' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'fi' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'if [ -f ${ocpath}/data/.htaccess ]; then' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
  		echo '	chmod 0644 ${ocpath}/data/.htaccess' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
  		echo '	chown ${rootuser}:${htgroup} ${ocpath}/data/.htaccess' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."
		echo 'fi' >> $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: File edit failed."

		# assign permissions to new script
		sudo chmod +x $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: Setting file permisions failed."
		sudo chown $currentuser:$currentuser $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: Setting file permisions failed."
		sudo chmod 770 $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: Setting file permisions failed."

		# Generating script to unlock file permissions
		echo '#!/bin/bash' | tee $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File creation failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."
		echo "# Sets permissions of the owncloud instance for updating" >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."
		echo "ocpath='/var/www/owncloud'" >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."
		echo "htuser='www-data'" >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."
		echo "htgroup='www-data'" >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."
		echo " " >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."
		echo 'chown -R ${htuser}:${htgroup} ${ocpath}' >> $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: File edit failed."

		# assign permissions to new script
		sudo chmod +x $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: Setting file permisions failed."
		sudo chown $currentuser:$currentuser $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: Setting file permisions failed."
		sudo chmod 770 $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: Setting file permisions failed."

		beenrun=1
		echo $beenrun > $PWD/flags/generateOwnCloudScripts.txt || error_exit "$LINENO: File edit failed."
	else
		return
	fi

	return
}


# Function to create ownCloud database in MariaDB
ownCloudDBConfig()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/ownCloudDBConfig.txt ]; then
		echo "0" > $PWD/flags/ownCloudDBConfig.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/ownCloudDBConfig.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		echo " "
		echo "############ Creating ownCloud MariaDB database and user ############"
		echo "#####################################################################"
        	echo " "

		# insert mariaDB and owncloud database passwords into expect script
		sudo sed -i "s:mdbrootpass:${mdbrootpass}:" $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		sudo sed -i "s:ocdbpass:${ocdbpass}:" $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: File edit failed."
		sudo chmod +x $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: Setting file permisions failed."

		# run expect script to configure mariaDB owncloud database
		sudo $PWD/scripts/ownCloudMariaDB.sh || error_exit "$LINENO: mariadb configuration failed."
		wait

		beenrun=1
		echo $beenrun > $PWD/flags/ownCloudDBConfig.txt || error_exit "$LINENO: File edit failed."
	else
		return
	fi

	return
}


# Function to provide info to tech for configuring ownCloud via web interface and enable caching in ownCloud
ownCloudWebConfig()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/ownCloudWebConfig.txt ]; then
		echo "0" > $PWD/flags/ownCloudWebConfig.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/ownCloudWebConfig.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		correct="n"

		# disable default site configs
		sudo a2ensite 0-default || error_exit "$LINENO: Site activation failed."
		sudo a2ensite 1-default-ssl || error_exit "$LINENO: Site activation failed."

		# edit initial owncloud site configuration file
		sudo echo "Alias /owncloud \"/var/www/owncloud/\"" | sudo tee /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File creation failed."
		sudo chmod 777 /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf "\n\n<Directory /var/www/owncloud/>" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nOptions +FollowSymlinks" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nAllowOverride All" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n<IfModule mod_dav.c>" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nDav off" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n</IfModule>" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\nSetEnv HOME /var/www/owncloud" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nSetEnv HTTP_HOME /var/www/owncloud" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n</Directory>" >> /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/apache2/conf-available/owncloud.conf || error_exit "$LINENO: Setting file permisions failed."

		#sudo a2ensite 2-owncloud || error_exit "$LINENO: Site activation failed."
		sudo a2enconf owncloud || error_exit "$LINENO: Site activation failed."

		# restart apache2 with new owncloud configuration
		sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."

		# Prompt user
		echo " "
		echo " "
		echo "############ Web-based configuration of ownCloud and ownCloud administrator account ############"
		echo "################################################################################################"
		echo " "
		if [ "$exthttpsport" != "$inthttpsport" ]; then
			echo "Open OwnCloud in browser: https://$hostname.$domainname:$exthttpsport/owncloud/"
		elif [ "$exthttpsport" == "$inthttpsport" ]; then
			echo "Open OwnCloud in browser: https://$hostname.$domainname/owncloud/"
		fi
		echo " "
		echo "Please enter the following information: "
		echo " "
		echo "ownCloud user name: $currentuser"
		echo "Password : $ocadminpass"
		echo " "
		echo "Click on Storage & Database below user info"
		echo " "
		echo "Select MySQL/MariaDB"
		echo " "
		echo "In the new tab below the MySQL/MariaDB selection, enter the following:"
		echo " "
		echo "Database user: owncloud"
		echo "Database password: $ocdbpass"
		echo "Database name: owncloud"
		echo "Leave last entry as localhost"
		echo " "
		echo "Click Finish Setup"
		echo " "
		echo "Navigate to the Admin page and edit the Maximum Upload Size to match the following: $maxuploadMBtemp MB"
		echo " "
		echo "When finished with web based configuration, close the browser window"
		read -p "and press enter to continue: "

		# if ssl cert was generated locally, insert into owncloud
		if [ "$combinedcert" != 1 ]; then
			sudo -u www-data php /var/www/owncloud/occ security:certificates:import /etc/ssl/certs/$clientcertificate || error_exit "$LINENO: Certificate import failed."
		fi

		# configure caching for owncloud and set ownCloud to use local timezone
		filestoreplace[$filecount]=/var/www/owncloud/config/config.php
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/'overwrite.cli.url' => 'https:\/\/$hostname.$domainname\/owncloud',/'overwrite.cli.url' => 'https:\/\/$ochostname.$domainname',/" /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/0 => '$hostname.$domainname',/0 => '$ochostname.$domainname',/" /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/),/a   'memcache.local' => '\\\OC\\\Memcache\\\Redis'," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'memcache.local' => '\\\OC\\\Memcache\\\Redis',/a   'filelocking.enabled' => true," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'filelocking.enabled' => true,/a   'memcache.locking' => '\\\OC\\\Memcache\\\Redis'," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'memcache.locking' => '\\\OC\\\Memcache\\\Redis',/a   'redis' => array(" /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'redis' => array(/a    'host' => 'localhost'," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'host' => 'localhost',/a    'port' => 6379," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'port' => 6379,/a   )," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/'logtimezone' => 'UTC',/'logtimezone' => '$tzcountry\/$tzlocale',/" /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'logtimezone' => '$tzcountry\/$tzlocale',/a'logfile' => '\/var\/log\/owncloud.log'," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "/'logfile' => '\/var\/log\/owncloud.log',/a'htaccess.RewriteBase' => '/'," /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# update .htaccess with new info
		sudo -u www-data php /var/www/owncloud/occ maintenance:update:htaccess || error_exit "$LINENO: .htaccess update failed."

		# restart apache2 with updated owncloud config
		sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."
		wait

		beenrun=1
		echo $beenrun > $PWD/flags/ownCloudWebConfig.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		return
	fi

	return
}


# Function to consolidate virtual web hosts
consolidateOwncloud()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/consolidateOwncloud.txt ]; then
		echo "0" > $PWD/flags/consolidateOwncloud.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/consolidateOwncloud.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# disable previous site configs
		sudo a2dissite 0-default || error_exit "$LINENO: Site deactivation failed."
		sudo a2dissite 1-default-ssl || error_exit "$LINENO: Site deactivation failed."
		sudo a2disconf owncloud || error_exit "$LINENO: Conf deactivation failed."
		sudo rm /etc/apache2/conf-available/owncloud.conf

		# copy ssl site for baseline owncloud
		sudo cp -R -a /etc/apache2/sites-available/1-default-ssl.conf /etc/apache2/sites-available/2-owncloud.conf

		# edit owncloud site address to not need /owncloud
		filestoreplace[$filecount]=/var/www/owncloud/config/config.php
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/https\:\/\/$ochostname.$domainname\/owncloud/https:\/\/$ochostname.$domainname/" /var/www/owncloud/config/config.php || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# create a consolidated owncloud website configuation
		filestoreplace[$filecount]=/etc/apache2/sites-available/2-owncloud.conf
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo truncate -s 0 /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 777 /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf '<VirtualHost *:80>' >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerName $ochostname.$domainname" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tDocumentRoot /var/www/owncloud" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		if [ "$exthttpsport" != "$inthttpsport" ]; then
			sudo printf "\n\n\tRedirect permanent \"/\" \"https://$ochostname.$domainname:$exthttpsport/\"" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		elif [ "$exthttpsport" == "$inthttpsport" ]; then
			sudo printf "\n\n\tRedirect permanent \"/\" \"https://$ochostname.$domainname/\"" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		fi
		sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/error.log" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/access.log combined" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n<VirtualHost *:443>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerName $ochostname.$domainname" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tDocumentRoot /var/www/owncloud" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/error.log" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/access.log combined" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tSSLEngine on" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tSSLCertificateFile\t\t/etc/ssl/certs/$clientcertificate" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tSSLCertificateKeyFile\t\t/etc/ssl/private/$clientkey" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		if [ -e $PWD/flags/cachainname.txt ]; then
			sudo printf "\n\tSSLCertificateChainFile\t\t/etc/ssl/certs/$clientcachain" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		fi
		sudo printf "\n\n\tAlias / \"/var/www/owncloud/\"" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<Directory /var/www/owncloud/>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tOptions +FollowSymlinks" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tAllowOverride All" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t\t<IfModule mod_dav.c>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\t\tDav off" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\t</IfModule>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t\tSetEnv HOME /var/www/owncloud" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tSetEnv HTTP_HOME /var/www/owncloud" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t</Directory>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<FilesMatch \"\.(cgi|shtml|phtml|php)$\">" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</FilesMatch>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<Directory /usr/lib/cgi-bin>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</Directory>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tBrowserMatch \"MSIE [2-6]\" \\" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tnokeepalive ssl-unclean-shutdown \\" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tdowngrade-1.0 force-response-1.0" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: Setting file permisions failed."
		filecount=$((filecount+1))

		# enable new owncloud site
		sudo a2ensite 2-owncloud || error_exit "$LINENO: Site activation failed."

		# restart apache2 with new owncloud site
		sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."

		beenrun=1
		echo $beenrun > $PWD/flags/consolidateOwncloud.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		return
	fi

	return
}


# Function to lock down ownCloud file permissions and enable PHP Security rules
secureOwnCloud()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/secureOwnCloud.txt ]; then
		echo "0" > $PWD/flags/secureOwnCloud.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/secureOwnCloud.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		echo " "
		echo "############ Configuring ownCloud website security ############"
		echo "###############################################################"
		echo " "

		# set secure owncloud file/folder permissions
		sudo $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: owncloud permissions lockdown failed."
		wait

		# restart apache2 with new configurations
		sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."

		beenrun=1
		echo $beenrun > $PWD/flags/secureOwnCloud.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		if [ -e $PWD/flags/ownCloud.txt ]; then
			# set secure owncloud file/folder permissions
			sudo $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: owncloud permissions lockdown failed."
			wait
		fi
		return
	fi

	return
}
