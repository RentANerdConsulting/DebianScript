# Function to verify Guest Additions ISO is inserted, and install it
installGuestAdditions()
{
	correct="n"
	until [ "$correct" == "y" ] ; do
		local inserted="n"
		echo " "
		echo "Insert the Guest Additions ISO into the VM CD-ROM drive."
		echo " "
		echo "Do this by using the menus on the active VirtualBox VM window."
		echo " "
		echo "Select 'Devices' -> 'Insert Guest Additions CD Image'."
		echo " "
		echo "OR, 'Machine' -> 'Settings' -> 'Storage', then selecting the empty optical drive."
		echo "Under attributes, click the image of a CD next to the listing of the optical drive."
		echo "Use VBoxGuestAdditions.iso if this is available. If it is not, you'll need to select"
		echo "Choose Virtual Optical Disc Image, and browse to the VirtualBox installation folder"
		echo "where the iso is located."
		echo " "
		read -p "Is the Guest Additions ISO inserted? y/n : " inserted
		if [ "$inserted" == "y" ]; then
			correct="y"

			# Mounting VirtualBox Guest Additions ISO
			sudo mount /dev/cdrom /mnt || error_exit "$LINENO: mount failed."
			wait

			# Installing VirtualBox Guest Additions
			sudo /mnt/VBoxLinuxAdditions.run || error_exit "$LINENO: install failed."
			wait
		else
			errorTracking;
		fi
	done

	return
}


# Function to check if being installed on a VirtualBox VM
checkIfVirtualBox()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/checkIfVirtualBoxVM.txt ] && [ "$physicalsystem" == "0" ]; then
		echo "0" > $PWD/flags/checkIfVirtualBoxVM.txt || error_exit "$LINENO: File creation failed."
		beenrun=0

		# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
		read beenrun < $PWD/flags/checkIfVirtualBoxVM.txt || error_exit "$LINENO: Read failed."
		if [ "$beenrun" != 1 ]; then
			correct="n"
			until [ "$correct" == "y" ] ; do
				local vbox=""
				echo " "
				read -p "Is this OS installed on a VirtualBox VM? y/n : " vbox
				if [ "$vbox" == "y" ]; then
					correct="y"
					virtualbox="1"

					# Call function to install VirtualBox Guest Additions if installed on VirtualBox hosted VM
					installGuestAdditions;
					wait
				elif [ "$vbox" == "n" ]; then
					correct="y"
					virtualbox="0"
				else
					errorTracking;
				fi
			done

			beenrun=1
			echo $beenrun > $PWD/flags/checkIfVirtualBoxVM.txt || error_exit "$LINENO: File creation failed."
			echo $virtualbox > $PWD/flags/virtualboxvm.txt || error_exit "$LINENO: File creation failed."
		fi
	elif [ ! -e $PWD/flags/checkIfVirtualBoxVM.txt ] && [ "$physicalsystem" == "1" ]; then
		echo "1" > $PWD/flags/checkIfVirtualBoxVM.txt || error_exit "$LINENO: File creation failed."
		echo "0" > $PWD/flags/virtualboxvm.txt || error_exit "$LINENO: File creation failed."		
	else
		return
	fi

	return
}


# Function to install VirtualBox and PHPVirtualBox
installVirtualBox()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/installVirtualBox.txt ]; then
		echo "0" > $PWD/flags/installVirtualBox.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/installVirtualBox.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# Make directory for VMs
		if [ ! -e $PWD/flags/vmdir.txt ]; then
			correct="n"
			until [ "$correct" == "y" ]; do
				echo " "
				echo "Please enter the parent directory structure to create for the new Samba user, starting from root,"
				echo "ie: /VMs"
				echo " "
				echo "This would create directory /VMs and apply permissions."
				echo " "
				echo "You could then create all virtual machines and their virtual drives under this parent directory."
				echo " "
				read -p "Please enter the parent directory structure: " vmdir
				echo " "
				read -p "Is this correct? $vmdir y/n: " correct
				if [ "$correct" == "y" ]; then
					echo "$vmdir" > $PWD/flags/vmdir.txt || error_exit "$LINENO: File creation failed."
				else
					errorTracking;
				fi
			done
		fi

		# Create Samba parent and user folders
		sudo mkdir -p $vmdir || error_exit "$LINENO: Folder creation failed ."

		# Apply file and folder permissions
		sudo chmod -R 775 $vmdir || error_exit "$LINENO: Setting folder permisions failed."

		# Install VirtualBox
		sudo apt-get update && sudo apt-get -y install virtualbox virtualbox-guest-additions-iso php7.0-soap php-pear || error_exit "$LINENO: Installation failed."

		# restart apache2 with new mods and features enabled
		sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."

		# download current extension pack
		sudo wget -P /tmp/ http://download.virtualbox.org/virtualbox/5.0.32/Oracle_VM_VirtualBox_Extension_Pack-5.0.32-112930.vbox-extpack || error_exit "$LINENO: Download failed."

		# install extension pack
		sudo VBoxManage extpack install /tmp/Oracle_VM_VirtualBox_Extension_Pack-5.0.32-112930.vbox-extpack || error_exit "$LINENO: Installation failed."

		# remove unecessary ext pack files
		sudo rm /tmp/Oracle_VM_VirtualBox_Extension_Pack-5.0.32-112930.vbox-extpack

		# add current user to vboxusers
		sudo adduser $currentuser vboxusers || error_exit "$LINENO: User group add failed."

		# add vbox user to vboxusers
		sudo useradd -m vbox -G vboxusers || error_exit "$LINENO: User group add failed."

		# add vbox to cdrom group for loading guest additions to vms
		sudo usermod -a -G cdrom vbox || error_exit "$LINENO: User group add failed."

		# Apply file and folder ownership
		sudo chown -R root:vboxusers $vmdir || error_exit "$LINENO: Setting folder ownership failed."

		# set vbox account password
		correct="n"
		until [ "$correct" == "y" ]; do
			echo " "
			echo "############ Create vbox user password ############"
			echo "###################################################"
			echo " "
			echo "Generate random password for VirtualBox user vbox using Keepass2"
			echo " "
			echo "Log this password as $clientname -> $hostname -> VirtualBox -> vbox, with user name vbox, as it may be needed later for maintenance."
			echo " "
			echo " "
			echo "You will be prompted to enter this password three times."
			echo "Once, just below, to store temporarily to enter for the site configuration,"
			echo "and twice when setting it for the vbox user account."
			echo " "
			echo "You may copy and paste it into the PuTTY window from Keepass."
			echo " "
			read -p "Enter VirtualBox user vbox password: " vboxuserpass 
			echo " "
			echo "VirtualBox user vbox password: $vboxuserpass"
			echo " "
			read -p "Is this correct? y/n: " correct
			if [ "$correct" != "y" ]; then
				errorTracking;
			else
				echo $vboxuserpass > $PWD/flags/vboxuserpass.txt || error_exit "$LINENO: File edit failed."
			fi
		done

		sudo passwd vbox || error_exit "$LINENO: Password creation failed."

		# Edit VirtualBox service configuration
		filestoreplace[$filecount]=/etc/default/virtualbox
		local count=0
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i '0,/SHUTDOWN_USERS=""/s//SHUTDOWN_USERS="all"/' /etc/default/virtualbox || error_exit "$LINENO: File edit failed."
		sudo sed -i '0,/SHUTDOWN=poweroff/s//SHUTDOWN=acpibutton/' /etc/default/virtualbox || error_exit "$LINENO: File edit failed."
		sudo sed -i '/SHUTDOWN=acpibutton/aVBOXWEB_USER=vbox' /etc/default/virtualbox || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# Enable vboxweb service
		sudo systemctl enable vboxweb.service || error_exit "$LINENO: Service registry failed."

		# Start vboxweb service
		sudo systemctl start vboxweb.service || error_exit "$LINENO: Service restart failed."

		# Download phpvirtualbox
		sudo wget -P /tmp/ http://downloads.sourceforge.net/project/phpvirtualbox/phpvirtualbox-5.0-5.zip || error_exit "$LINENO: File download failed."

		# Extract phpvirtualbox
		sudo unzip /tmp/phpvirtualbox-5.0-5.zip -d /tmp/ || error_exit "$LINENO: File decompression failed."

		# Move phpvirtualbox to it's install path
		sudo mv /tmp/phpvirtualbox-5.0-5 /var/www/html/phpvirtualbox || error_exit "$LINENO: Folder move failed."

		# Remove download file
		sudo rm /tmp/phpvirtualbox-5.0-5.zip

		# Copy configuration example file to config file
		sudo cp /var/www/html/phpvirtualbox/config.php-example /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File copy failed." 

		# Edit phpvb configuration file
		filestoreplace[$filecount]=/var/www/html/phpvirtualbox/config.php
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/var \$password = 'pass';/var \$password = '$vboxuserpass';/" /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/var \$location = 'http:\/\/127.0.0.1:18083\/';/var \$location = 'http:\/\/localhost:18083\/';/" /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/var \$vrdeports = '9000-9100';/var \$vrdeports = '9000-9020';/" /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/#var $enableGuestAdditionsVersionDisplay = true;/var $enableGuestAdditionsVersionDisplay = true;/' /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/#var $enableAdvancedConfig = true;/var $enableAdvancedConfig = true;/' /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/#var $startStopConfig = true;/var $startStopConfig = true;/' /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/#var $vmMemoryStartLimitWarn = true;/var $vmMemoryStartLimitWarn = true;/' /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/#var $vmMemoryOffset = 100;/var $vmMemoryOffset = 100;/' /var/www/html/phpvirtualbox/config.php || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		beenrun=1
		echo $beenrun > $PWD/flags/installVirtualBox.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		return
	fi

	return
}


# Function to configure phpvb website
phpvbWebConfig()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/phpvbWebConfig.txt ]; then
		echo "0" > $PWD/flags/phpvbWebConfig.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/phpvbWebConfig.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# disable default site configs
		sudo a2dissite 000-default
		sudo a2dissite default-ssl

		# create netdata website configuation
		sudo echo '<VirtualHost *:80>' | sudo tee /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File creation failed."
		sudo chmod 777 /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf "\n\tServerName $phpvbhostname.$domainname" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tDocumentRoot /var/www/html/phpvirtualbox" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		if [ "$exthttpsport" != "$inthttpsport" ]; then
			sudo printf "\n\n\tRedirect permanent \"/\" \"https://$phpvbhostname.$domainname:$exthttpsport/\"" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		elif [ "$exthttpsport" == "$inthttpsport" ]; then
			sudo printf "\n\n\tRedirect permanent \"/\" \"https://$phpvbhostname.$domainname/\"" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		fi
		sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/error.log" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/access.log combined" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n<VirtualHost *:443>" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerName $phpvbhostname.$domainname" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tDocumentRoot /var/www/html/phpvirtualbox" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/error.log" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/access.log combined" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tSSLEngine on" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tSSLCertificateFile\t\t/etc/ssl/certs/$clientcertificate" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tSSLCertificateKeyFile\t\t/etc/ssl/private/$clientkey" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		if [ "$combinedcert" == 0 ] && [ -e $PWD/flags/installApache.txt ] && [ -e $PWD/flags/cachainname.txt ]; then
			sudo printf "\n\tSSLCertificateChainFile\t\t/etc/ssl/certs/$clientcachain" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		fi
		sudo printf "\n\n\t<FilesMatch \"\.(cgi|shtml|phtml|php)$\">" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</FilesMatch>" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<Directory /usr/lib/cgi-bin>" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</Directory>" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tBrowserMatch \"MSIE [2-6]\" \\" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tnokeepalive ssl-unclean-shutdown \\" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tdowngrade-1.0 force-response-1.0" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/apache2/sites-available/phpvirtualbox-ssl.conf || error_exit "$LINENO: Setting file permisions failed."
		filecount=$((filecount+1))

		# enable new phpvirtualbox site
		sudo a2ensite phpvirtualbox-ssl || error_exit "$LINENO: Site activation failed."

		# Restart services
		sudo systemctl restart apache2.service && sudo systemctl restart vboxweb.service || error_exit "$LINENO: Services restart failed."

		echo " "
		echo "Once this install finishes, you'll be able to access the site."
		echo " "
		echo "The default user name is admin, and the default password is admin."
		echo " "
		echo "CHANGE THESE IMMEDIATELY AFTER LOGGING IN!"
		echo " "
		read -p "Press enter to continue: "

		beenrun=1
		echo $beenrun > $PWD/flags/phpvbWebConfig.txt || error_exit "$LINENO: File edit failed."

	else
		return
	fi

	return
}
