# Function to create folders for media storage
mediaFolderCreation()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/mediaFolderCreation.txt ]; then
		echo "0" > $PWD/flags/mediaFolderCreation.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/mediaFolderCreation.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		correct="n"
		until [ "$correct" == "y" ]; do
			local plexdirectory=""
			if [ ! -e $PWD/flags/plexdir.txt ]; then
				echo " "
				echo "Please enter the parent directory structure to create where Plex will access media, starting from root,"
				echo "ie: /StorageArray/Plex"
				echo " "
				echo "This would create directories:"
				echo " "
				echo "/StorageArray/Plex/Music"
				echo " "
				echo "/StorageArray/Plex/TV"
				echo " "
				echo "/StorageArray/Plex/Movies"
				echo " "
				read -p "Please enter the parent directory structure: " plexdirectory
				echo " "
				read -p "Is this correct? $plexdirectory y/n: " correct
				if [ "$correct" == "y" ]; then
					plexdir=$plexdirectory

				else
					errorTracking;
				fi

			elif [ -e $PWD/flags/plexdir.txt ]; then
				plexdirectory=$plexdir
				correct="y"
			fi

			# Create media directories and show user
			if [ "$correct" == "y" ]; then
				sudo mkdir -p $plexdirectory/Movies || error_exit "$LINENO: Folder creation failed."
				sudo mkdir -p $plexdirectory/TV || error_exit "$LINENO: Folder creation failed."
				sudo mkdir -p $plexdirectory/Music || error_exit "$LINENO: Folder creation failed."
				echo " "
				echo "############ Plex Folders for media created ############"
				echo " "
				echo "Movies - $plexdirectory/Movies"
				echo " "
				echo "TV - $plexdirectory/TV"
				echo " "
				echo "Music - $plexdirectory/Music"
				echo " "
				echo " "
				echo "If this is a server with a Command Line Interface only:"
				echo "-------------------------------------------------------"
				echo " "
				echo "On a computer in the same network, open a browser window."
				echo " "
				echo "In the browser address bar, navigate to http://(IP Address of server):32400/web"
				echo " "
				echo "Sign into Plex or create an account."
				echo " "
				echo " "
				echo " "
				echo " "
				echo "If this is a system with a Graphical User Interface:"
				echo "----------------------------------------------------"
				echo " "
				echo "In your browser address bar, navigate to http://127.0.0.1:32400/web"
				echo " "
				echo "Sign into Plex or create an account."
				echo " "
				echo " "
				echo " "
				read -p "When finished, press enter to continue: "
			fi
		done

		echo $plexdir > $PWD/flags/plexdir.txt || error_exit "$LINENO: File edit failed."

		beenrun=1
		echo $beenrun > $PWD/flags/mediaFolderCreation.txt || error_exit "$LINENO: File edit failed."
	else
		return
	fi

	return
}


# Function to download and install Plex Media Server
downInstPlex()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/downInstPlex.txt ]; then
		echo "0" > $PWD/flags/downInstPlex.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/downInstPlex.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# download key for plex
		sudo curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add - || error_exit "$LINENO: plex key download or add failed."

		# add plex repo to sources lists
		sudo echo deb https://downloads.plex.tv/repo/deb/ public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list || error_exit "$LINENO: source lists add failed."

		# install plex media server
		sudo apt-get update && sudo apt-get install -y plexmediaserver || error_exit "$LINENO: Installation failed."
		wait

		# create memory temp file for transcoding
		filestoreplace[$filecount]=/etc/fstab
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/fstab || error_exit "$LINENO: Setting file permisions failed."
		sudo printf "\n" >> /etc/fstab || error_exit "$LINENO: File edit failed."
		sudo printf 'tmpfs     /run/shm     tmpfs     defaults,noexec,nosuid     0     0' >> /etc/fstab || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fstab || error_exit "$LINENO: Setting file permisions failed."
		filecount=$((filecount+1))

		# Install HandBrake if GUI installed
		if [ "$guiorcli" == "gui" ]; then
			sudo add-apt-repository ppa:stebbins/handbrake-releases || error_exit "$LINENO: PPA add failed."
			sudo apt-get install -y handbrake-gtk libdvdcss2 libbluray-bdj || error_exit "$LINENO: Installation failed."
			sudo dpkg-reconfigure libdvd-pkg || error_exit "$LINENO: Package reconfigure failed."
		fi

		beenrun=1
		echo $beenrun > $PWD/flags/downInstPlex.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait

	else
		return
	fi

	return
}
