# Function to enable iSCSI
enableiSCSIFirewall()
{
	if [ "$hostedserver" == 0 ]; then

		# Check to see if beenrun file exists. If not, create it.
		if [ ! -e $PWD/flags/enableiSCSIFirewall.txt ]; then
			echo "0" > $PWD/flags/enableiSCSIFirewall.txt || error_exit "$LINENO: File creation failed."
		fi
		beenrun=0

		# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
		read beenrun < $PWD/flags/enableiSCSIFirewall.txt || error_exit "$LINENO: Read failed."
		if [ "$beenrun" != 1 ]; then
			echo " "
			echo "############ Enabling iSCSI firewall rules ############"
			echo "#######################################################"

			# backup IPv4 firewall ruleset, then enable firewall rules for service
			filestoreplace[$filecount]=/etc/iptables/rules.v4
			sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
			sudo sed -i "/\\-A INPUT \\-i $nicname \\-p tcp \\-m multiport \\-\\-sports 80\\,443 \\-m conntrack \\-\\-ctstate ESTABLISHED \\-j ACCEPT/a\\\n\\# Enable iSCSI\n\\-A INPUT \\-i $nicname \\-s $subnetip\\/$subnetmask \\-p tcp \\-\\-dport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT" /etc/iptables/rules.v4 || error_exit "$LINENO: File edit failed."
			sudo sed -i "/\\-A INPUT \\-i $nicname \\-s $subnetip\\/$subnetmask \\-p tcp \\-\\-dport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/a\\-A OUTPUT \\-o $nicname \\-d $subnetip\\/$subnetmask \\-p tcp \\-\\-sport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT" /etc/iptables/rules.v4 || error_exit "$LINENO: File edit failed."
			filecount=$((filecount+1))

			# Restart firewall with new ruleset
			sudo systemctl restart netfilter-persistent || error_exit "$LINENO: Service restart failed."

			beenrun=1
			echo $beenrun > $PWD/flags/enableiSCSIFirewall.txt || error_exit "$LINENO: File edit failed."
			echo "on" > $PWD/flags/iSCSI.txt || error_exit "$LINENO: File edit failed."

			# Remove backed up files after complete
			cleanUpSuccessful;
			wait
		elif [ "$beenrun" == 1 ]; then
			local iscsicheck=""
			read iscsicheck < $PWD/flags/iSCSI.txt || error_exit "$LINENO: Read failed."
			if [ "$iscsicheck" == "on" ]; then
				return
			else
				echo " "
				echo "############ Enabling iSCSI firewall rules ############"
				echo "#######################################################"

				# backup IPv4 firewall ruleset, then enable firewall rules for service
				filestoreplace[$filecount]=/etc/iptables/rules.v4
				sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
				sudo sed -i "s/\\#\\-A INPUT \\-i $nicname \\-s $subnetip\\/$subnetmask \\-p tcp \\-\\-dport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/\\-A INPUT \\-i $nicname \\-s $subnetip\\/$subnetmask \\-p tcp \-\\-dport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/" /etc/iptables/rules.v4 || error_exit "$LINENO: File edit failed."
				sudo sed -i "s/\\#\\-A OUTPUT \\-o $nicname \\-d $subnetip\\/$subnetmask \\-p tcp \\-\\-sport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/\\-A OUTPUT \\-o $nicname \\-d $subnetip\\/$subnetmask \\-p tcp \\-\\-sport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/" /etc/iptables/rules.v4 || error_exit "$LINENO: File edit failed."
				filecount=$((filecount+1))

				# Restart firewall with new ruleset
				sudo systemctl restart netfilter-persistent || error_exit "$LINENO: Service restart failed."

				echo "on" > $PWD/flags/iSCSI.txt || error_exit "$LINENO: File edit failed."

				# Remove backed up files after complete
				cleanUpSuccessful;
				wait
			fi
		fi
	else
		local anykey=0
		echo "#############################################################"
		echo " "
		echo "This is a virtual server hosted by a third party. As such,"
		echo "iSCSI cannot be enabled for security reasons."
		echo " "
		read -p "Please press enter to return to the previous menu. " anykey
	fi
}


# Function to disable iSCSI
disableiSCSIFirewall()
{
	local iscsicheck=""
	read iscsicheck < $PWD/flags/iSCSI.txt || error_exit "$LINENO: Read failed."
	if [ "$iscsicheck" == "on" ]; then
		echo " "
		echo "############ Disabling iSCSI firewall rules ############"
		echo "#######################################################"

		# backup IPv4 firewall ruleset, then disable firewall rules for service
		filestoreplace[$filecount]=/etc/iptables/rules.v4
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/\\-A INPUT \\-i $nicname \\-s $subnetip\\/$subnetmask \\-p tcp \\-\\-dport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/\\#\\-A INPUT \\-i $nicname \\-s $subnetip\\/$subnetmask \\-p tcp \\-\\-dport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/" /etc/iptables/rules.v4 || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\-A OUTPUT \\-o $nicname \\-d $subnetip\\/$subnetmask \\-p tcp \\-\\-sport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/\\#\\-A OUTPUT \\-o $nicname \\-d $subnetip\\/$subnetmask \\-p tcp \\-\\-sport 3260 \\-m conntrack \\-\\-ctstate NEW\\,ESTABLISHED \\-j ACCEPT/" /etc/iptables/rules.v4 || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# Restart firewall with new ruleset
		sudo systemctl restart netfilter-persistent || error_exit "$LINENO: Service restart failed."

		echo "off" > $PWD/flags/iSCSI.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		echo " "
		echo "iSCSI is not currently enabled."
		echo " "
		return
	fi
}
