installNetdata()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/installNetdata.txt ]; then
		echo "0" > $PWD/flags/installNetdata.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/installNetdata.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		echo " "
		echo "############ Installing Netdata ############"
		echo "############################################"
		echo " "

		# install Netdata prerequisites
		sudo apt-get update && sudo apt-get -y install php7.0-bz2 php7.0-ldap php-memcache php-imagick php-apcu default-jre librdf-storage-mysql default-java-plugin php-redis redis-server uuid-dev libmnl-dev autoconf-archive python python-yaml python-mysqldb python-psycopg2 nodejs netcat || error_exit "$LINENO: Installation failed."
		wait

		# Download Netdata
		git clone https://github.com/firehol/netdata.git --depth=1 ./netdata
		wait

		# change to download dir
		cd netdata

		# install Netdata
		sudo ./netdata-installer.sh

		# stop Netdata
		sudo killall netdata

		# set up as service if not already, to run on system startup
		sudo cp system/netdata.service /etc/systemd/system/

		# return to PWD
		cd ..

		# enable ksm memory deduplication
		filestoreplace[$filecount]=/etc/rc.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "/# By default this script does nothing./ a \\\necho 1 > \/sys\/kernel\/mm\/ksm\/run" /etc/rc.local || error_exit "$LINENO: File edit failed."
		sudo sed -i "/echo 1 > \/sys\/kernel\/mm\/ksm\/run/ a echo 1000 > \/sys\/kernel\/mm\/ksm\/sleep_millisecs" /etc/rc.local || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		filestoreplace[$filecount]=/etc/netdata/netdata.conf
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/# history = 3600/history = 14400 # Retain four hours of info/" /etc/netdata/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/# bind to = \*/bind to = 127.0.0.1/" /etc/netdata/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/# enable gzip compression = yes/enable gzip compression = no/" /etc/netdata/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/# access log = \/var\/log\/netdata\/access.log/access log = none/" /etc/netdata/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/# memory deduplication (ksm) = yes/memory deduplication (ksm) = yes/" /etc/netdata/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/# hostname = $hostname/hostname = $hostname\@$domainname/" /etc/netdata/netdata.conf || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# enable Netdata service
		sudo systemctl enable netdata

		# start Netdata service
		sudo service netdata start

		# set netdata to automatically update
		sudo ln -s /CustomDownloads/netdata/netdata-updater.sh /etc/cron.daily/netdata-updater.sh

		beenrun=1
		echo $beenrun > $PWD/flags/installNetdata.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		return
	fi

	return
}


# Function to configure Netdata website
netdataWebConfig()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/netdataWebConfig.txt ]; then
		echo "0" > $PWD/flags/netdataWebConfig.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/netdataWebConfig.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# disable default site configs
		sudo a2dissite 0-default
		sudo a2dissite 1-default-ssl

		# enable mods required features
		sudo a2enmod proxy proxy_http || error_exit "$LINENO: Module activation failed."

		# create netdata website configuation
		sudo echo '<VirtualHost *:80>' | sudo tee /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File creation failed."
		sudo chmod 777 /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf "\n\tServerName $ndhostname.$domainname" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tDocumentRoot /usr/share/netdata/web/netdata" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		if [ "$exthttpsport" != "$inthttpsport" ]; then
			sudo printf "\n\n\tRedirect permanent \"/\" \"https://$ndhostname.$domainname:$exthttpsport/\"" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		elif [ "$exthttpsport" == "$inthttpsport" ]; then
			sudo printf "\n\n\tRedirect permanent \"/\" \"https://$ndhostname.$domainname/\"" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		fi
		sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/netdata-error.log" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/netdata-access.log combined" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n<VirtualHost *:443>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerName $ndhostname.$domainname" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tDocumentRoot /usr/share/netdata/web/netdata" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/netdata-error.log" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/netdata-access.log combined" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tSSLEngine on" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tSSLCertificateFile\t\t/etc/ssl/certs/$clientcertificate" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tSSLCertificateKeyFile\t\t/etc/ssl/private/$clientkey" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		if [ -e $PWD/flags/cachainname.txt ]; then
			sudo printf "\n\tSSLCertificateChainFile\t\t/etc/ssl/certs/$clientcachain" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		fi
		sudo printf "\n\tProxyRequests Off" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tProxyPreserveHost On" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<Proxy *>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tOrder deny,allow" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tAllow from all" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</Proxy>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t# Local 127.0.0.1:19999 netdata server accessed with '/'" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tProxyPass \"/\" \"http://127.0.0.1:19999/\" connectiontimeout=5 timeout=30" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\tProxyPassReverse \"/\" \"http://127.0.0.1:19999/\"" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<Location />" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tAuthType Basic" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tAuthName \"Protected site\"" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tAuthUserFile /etc/apache2/netdata/.htpasswd" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tRequire valid-user" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tOrder deny,allow" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tAllow from all" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</Location>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<FilesMatch \"\.(cgi|shtml|phtml|php)$\">" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</FilesMatch>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\t<Directory /usr/lib/cgi-bin>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t</Directory>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\n\tBrowserMatch \"MSIE [2-6]\" \\" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tnokeepalive ssl-unclean-shutdown \\" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t\tdowngrade-1.0 force-response-1.0" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: Setting file permisions failed."

		# enable new netdata site
		sudo a2ensite 3-netdata-ssl || error_exit "$LINENO: Site activation failed."

		# prompt for user to enable for site
		correct="n"
		until [ "$correct" == "y" ]; do
			local netuser=""
			echo " "
			echo "############ Create Netdata login and password ############"
			echo "###########################################################"
			echo " "
			read -p "Will this username and password be for the current user? y/n " netuser

			# If current user, proceed
			if [ "$netuser" == "y" ]; then
				netuser="$currentuser"
				correct="y"

			# Begin checks for user
			elif [ "$netuser" == "n" ]; then
				local anykey=""
				echo " "
				echo " "
				read -p "Please enter the username of the user this is for: " anykey
				anykey="$(translateToLowerCase $anykey)"

				# Verify other admin is supposed to have access
				if [ "$(userExists $anykey)" == 0 ] && [ "$(verifyMemberofGroup $anykey admin)" == 0 ]; then
					echo " "
					echo " "
					echo "This login and password will be for the user $anykey."
					echo " "
					read -p "Is this correct? y/n " correct
					if [ "$correct" == "y" ]; then
						netuser="$anykey"
					else
						errorTracking;
					fi

				# Make sure non admin user is correctly being given access
				elif [ "$(userExists $anykey)" == 0 ] && [ "$(verifyMemberofGroup $anykey admin)" != 0 ]; then
					echo "$anykey is not an administrator."
					echo " "
					read -p "Are you certain you want to give them access? y/n: " correct
					if [ "$correct" == "y" ]; then
						netuser="$anykey"
					else
						errorTracking;
					fi

				# Fix non existent user situation
				elif [ "$(userExists $anykey)" != 0]; then
					echo "$anykey is not a valid user on this system."
					echo " "
					echo "If you would like to create a standard user for $anykey, type user at the prompt."
					echo " "
					echo "If you would like to create an administrator user for $anykey, type admin at the prompt."
					echo " "
					echo "If you made a mistake and want to try again, type oops at the prompt."
					echo " "
					echo "Please enter your selection. user/admin/oops: " correct
					case $correct in

						# Create standard user and return to initial prompt
						user ) addAdditionalUsers
							correct="n";;

						# Create admin user and return to initial prompt
						admin ) addAdditionalAdmins
							correct="n";;

						# Return to initial prompt
						oops ) correct="n"
							errorTracking;;

						# Return to initial prompt, because someone isn't awake today
						* ) correct="n"
							errorTracking;;
					esac
				fi
			fi
		done

		# have user generate login password
		echo " "
		echo " "
		echo "Generate random password for $netuser to log into the Netdata site using Keepass2"
		echo " "
		echo "Log this password as $clientname -> $hostname -> Netdata -> $netuser."
		echo " "
		echo " "
		echo "You will be prompted for this password shortly."
		echo " "
		echo "Please be ready to type it in, or copy and paste it from keepass into PuTTY."
		echo " "
		read -p "Press the enter key when ready to continue: "
		
		sudo mkdir -p /etc/apache2/netdata || error_exit "$LINENO: Folder creation failed."

		# set password for login
		sudo htpasswd -c /etc/apache2/netdata/.htpasswd $netuser || error_exit "$LINENO: Password creation failed."

		# restart apache2 with new netdata site
		sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."

		beenrun=1
		echo $beenrun > $PWD/flags/netdataWebConfig.txt || error_exit "$LINENO: File edit failed."
	else
		return
	fi

	return
}


# Add new user to Netdata site access list
addNetdataSiteUser()
{
	# prompt for user to enable for site
	correct="n"
	until [ "$correct" == "y" ]; do
		local netuser=""
		echo " "
		echo "############ Create Netdata login and password ############"
		echo "###########################################################"
		echo " "
		read -p "Will this username and password be for the current user? y/n " netuser

		# If current user, proceed
		if [ "$netuser" == "y" ]; then
			netuser="$currentuser"
			correct="y"

		# Begin checks for user
		elif [ "$netuser" == "n" ]; then
			local anykey=""
			echo " "
			echo " "
			read -p "Please enter the username of the user this is for: " anykey
			anykey="$(translateToLowerCase $anykey)"

			# Verify other admin is supposed to have access
			if [ "$(userExists $anykey)" == 0 ] && [ "$(verifyMemberofGroup $anykey admin)" == 0 ]; then
				echo " "
				echo " "
				echo "This login and password will be for the user $anykey."
				echo " "
				read -p "Is this correct? y/n " correct
				if [ "$correct" == "y" ]; then
					netuser="$anykey"
				else
					errorTracking;
				fi

			# Make sure non admin user is correctly being given access
			elif [ "$(userExists $anykey)" == 0 ] && [ "$(verifyMemberofGroup $anykey admin)" != 0 ]; then
				echo "$anykey is not an administrator."
				echo " "
				read -p "Are you certain you want to give them access? y/n: " correct
				if [ "$correct" == "y" ]; then
					netuser="$anykey"
				else
					errorTracking;
				fi

			# Fix non existent user situation
			elif [ "$(userExists $anykey)" != 0]; then
				echo "$anykey is not a valid user on this system."
				echo " "
				echo "If you would like to create a standard user for $anykey, type user at the prompt."
				echo " "
				echo "If you would like to create an administrator user for $anykey, type admin at the prompt."
				echo " "
				echo "If you made a mistake and want to try again, type oops at the prompt."
				echo " "
				echo "Please enter your selection. user/admin/oops: " correct
				case $correct in

					# Create standard user and return to initial prompt
					user ) addAdditionalUsers
						correct="n";;

					# Create admin user and return to initial prompt
					admin ) addAdditionalAdmins
						correct="n";;

					# Return to initial prompt
					oops ) correct="n"
						errorTracking;;

					# Return to initial prompt, because someone isn't awake today
					* ) correct="n"
						errorTracking;;
				esac
			fi
		fi
	done

	# have user generate login password
	echo " "
	echo " "
	echo "Generate random password for $netuser to log into the Netdata site using Keepass2"
	echo " "
	echo "Log this password as $clientname -> $hostname -> Netdata -> $netuser."
	echo " "
	echo " "
	echo "You will be prompted for this password shortly."
	echo " "
	echo "Please be ready to type it in, or copy and paste it from keepass into PuTTY."
	echo " "
	read -p "Press the enter key when ready to continue: "

	# set password for login
	sudo htpasswd /etc/apache2/netdata/.htpasswd $netuser || error_exit "$LINENO: Password creation failed."
}
