# Function to harden system against intruders
hardenOperatingSystem()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/hardenOperatingSystem.txt ]; then
		echo "0" > $PWD/flags/hardenOperatingSystem.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/hardenOperatingSystem.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		echo " "
		echo "############ Hardening system against intruders ############"
		echo "############################################################"

		# prevent tmpfs exploits
		filestoreplace[$filecount]=/etc/fstab
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/fstab || error_exit "$LINENO: Setting file permisions failed."
		sudo printf "\ntmpfs     /run/shm     tmpfs     defaults,noexec,nosuid     0     0" >> /etc/fstab || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fstab || error_exit "$LINENO: Setting file permisions failed."
		filecount=$((filecount+1))

		# enable general good security settings for ip traffic
		filestoreplace[$filecount]=/etc/sysctl.conf
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/sysctl.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# IP Spoofing protection" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.all.rp_filter = 1" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.default.rp_filter = 1" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# Ignore ICMP broadcast requests" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.icmp_echo_ignore_broadcasts = 1" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# Disable source packet routing" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.all.accept_source_route = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv6.conf.all.accept_source_route = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.default.accept_source_route = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv6.conf.default.accept_source_route = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# Ignore send redirects" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.all.send_redirects = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.default.send_redirects = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# Block SYN attacks" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.tcp_syncookies = 1" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.tcp_max_syn_backlog = 2048" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.tcp_synack_retries = 2" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.tcp_syn_retries = 5" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# Log Martians" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.all.log_martians = 1" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.icmp_ignore_bogus_error_responses = 1" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# Ignore ICMP redirects" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.all.accept_redirects = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv6.conf.all.accept_redirects = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.conf.default.accept_redirects = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv6.conf.default.accept_redirects = 0" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n# Ignore Directed pings" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nnet.ipv4.icmp_echo_ignore_all = 1" >> /etc/sysctl.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/sysctl.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo sysctl -p || error_exit "$LINENO: Service reload failed."
		filecount=$((filecount+1))

		# check dns first, use hosts as a backup option, prevent spoofing
		filestoreplace[$filecount]=/etc/host.conf
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/order hosts,bind/order bind,hosts/" /etc/host.conf || error_exit "$LINENO: File edit failed."
		sudo sed -i "/multi on/ a nospoof on" /etc/host.conf || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# create admin group
		sudo groupadd admin || error_exit "$LINENO: Group add failed."

		# Add current user to admin group
		sudo usermod -a -G admin $currentuser || error_exit "$LINENO: Group add failed."

		# Block root access to ssh and limit access to admin group
		filestoreplace[$filecount]=/etc/ssh/sshd_config
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/PermitRootLogin prohibit-password/PermitRootLogin no/" /etc/ssh/sshd_config || error_exit "$LINENO: File edit failed."
		sudo sed -i "/PermitRootLogin no/ a DebianBanner no" /etc/ssh/sshd_config || error_exit "$LINENO: File edit failed."
		sudo sed -i "/DebianBanner no/ a AllowGroups admin" /etc/ssh/sshd_config || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# override setting so admin is default root group
		sudo dpkg-statoverride --update --add root admin 4750 /bin/su || error_exit "$LINENO: Group override failed."

		# rebuild kernel images with new information
		sudo update-initramfs -c -k all || error_exit "$LINENO: kernel update failed."

		# update boot menu with new images
		sudo update-grub || error_exit "$LINENO: grub update failed."

		beenrun=1
		echo $beenrun > $PWD/flags/hardenOperatingSystem.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		return
	fi

	return
}


# Function to install and configure Fail2Ban, Tripwire, etc
installSecurity()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/installSecurity.txt ]; then
		echo "0" > $PWD/flags/installSecurity.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/installSecurity.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		correct="n"
		echo " "
		echo "############ Installing additional security software ############"
		echo "#################################################################"
		echo " "

		# install fail2ban
		sudo apt install -y fail2ban  || error_exit "$LINENO: Installation failed."
		wait

		# set chkrootkit to scan daily
		filestoreplace[$filecount]=/etc/chkrootkit.conf
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i 's/RUN_DAILY="false"/RUN_DAILY="true"/' /etc/chkrootkit.conf || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# check for any rootkits that may already be installed
		sudo chkrootkit || error_exit "$LINENO: chkrootkit runtime failed."
		wait

		# set rkhunter to update and scan daily, as well as scan new installs to add to internal database
		filestoreplace[$filecount]=/etc/default/rkhunter
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i 's/APT_AUTOGEN="false"/APT_AUTOGEN="true"/' /etc/default/rkhunter || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/CRON_DAILY_RUN="false"/CRON_DAILY_RUN="true"/' /etc/default/rkhunter || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/CRON_DB_UPDATE="false"/CRON_DB_UPDATE="true"/' /etc/default/rkhunter || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# remove common false positive from database
		filestoreplace[$filecount]=/etc/rkhunter.conf
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i 's|#ALLOWHIDDENDIR=/etc/.java|ALLOWHIDDENDIR=/etc/.java|' /etc/rkhunter.conf || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# create and configure fail2ban jail local file to override default settings, and to ignore local subnet and loopback interface
		sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
		filestoreplace[$filecount]=/etc/fail2ban/jail.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo truncate -s 0 /etc/fail2ban/jail.local || error_exit "$LINENO: truncate file failed."
		sudo chmod 777 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		sudo printf '[DEFAULT]' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		if [ "$hostedserver" == 0 ]; then
			sudo printf "\nignoreip = 127.0.0.1/8 $subnetip/$subnetmask" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		fi
		sudo printf '\n\n[sshd]' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\nenabled = true' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\nport    = ssh' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\n\n[sshd-ddos]' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\nenabled = true' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\nport    = ssh' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\n\n[apache-auth]' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\n\n[apache-badbots]' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\n\n[webmin-auth]' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\n\n[recidive]' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\nenabled = true' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf '\nbantime = 31536000 ; 1 year' >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		filecount=$((filecount+1))

		# create and configure local fail2ban sendmail override file, to provide FQDN in notification emails
		sudo cp /etc/fail2ban/action.d/sendmail-common.conf /etc/fail2ban/action.d/sendmail-common.local
		filestoreplace[$filecount]=/etc/fail2ban/action.d/sendmail-common.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo truncate -s 0 /etc/fail2ban/action.d/sendmail-common.local || error_exit "$LINENO: truncate file failed."
		sudo chmod 777 /etc/fail2ban/action.d/sendmail-common.local || error_exit "$LINENO: permissions change failed."
		sudo printf '[Init]' >> /etc/fail2ban/action.d/sendmail-common.local || error_exit "$LINENO: File edit failed."
		sudo printf "\n\nsendername = $fqdn" >> /etc/fail2ban/action.d/sendmail-common.local || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/action.d/sendmail-common.local || error_exit "$LINENO: permissions change failed."
		filecount=$((filecount+1))

		# create and configure primary fail2ban configuration override file to increase purge age, allowing for repeat offenders to be banhammered for a year
		sudo cp /etc/fail2ban/fail2ban.conf /etc/fail2ban/fail2ban.local
		filestoreplace[$filecount]=/etc/fail2ban/fail2ban.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo truncate -s 0 /etc/fail2ban/fail2ban.local || error_exit "$LINENO: truncate file failed."
		sudo chmod 777 /etc/fail2ban/fail2ban.local || error_exit "$LINENO: permissions change failed."
		sudo printf '[Definition]' >> /etc/fail2ban/fail2ban.local || error_exit "$LINENO: File edit failed."
		sudo printf "\n\ndbpurgeage = 31579200" >> /etc/fail2ban/fail2ban.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nloglevel = INFO" >> /etc/fail2ban/fail2ban.local || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/fail2ban.local || error_exit "$LINENO: permissions change failed."
		filecount=$((filecount+1))

		if [ "$hostedserver" == 0 ]; then
			# allow local network clients to attempt logins and fail without being immediately banned
			filestoreplace[$filecount]=/etc/hosts.allow
			sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
			sudo sed -i -e "\$aALL: $subnetip\/$subnetmask" /etc/hosts.allow || error_exit "$LINENO: File edit failed."
			filecount=$((filecount+1))
		fi

		# Restart fail2ban with new settings
		sudo service fail2ban restart || error_exit "$LINENO: Service restart failed."
		wait

		# update fkhunter database
		sudo rkhunter --update
		wait

		# update rkhunter based on new info
		sudo rkhunter --propupd
		wait

		# run rkhunter in non-interactive mode
		sudo rkhunter --check --rwo
		wait

		echo " "
		echo "############ Installing Tripwire ############"
		echo "#############################################"
		echo " "
		echo "Generate random password for Tripwire Local Key Passphrase using Keepass2"
		echo " "
		echo "Log this password as $clientname -> $hostname -> Tripwire Local Key Passphrase"
		echo "This will be used shortly."
		echo "BE VERY CAREFUL TO ENTER THESE PASSWORDS CORRECTLY IN THE NEXT STEP!!!"
		echo " "
		echo "Generate random password for Tripwire Site Key Passphrase using Keepass2"
		echo " "
		echo "Log this password as $clientname -> $hostname -> Tripwire Site Key Passphrase"
		echo "This will be used shortly."
		echo "BE VERY CAREFUL TO ENTER THESE PASSWORDS CORRECTLY IN THE NEXT STEP!!!"
		echo " "
		read -p "When finished, press enter to proceed: "

		# install tripwire
		sudo apt -y install tripwire || error_exit "$LINENO: Installation failed."
		wait

		# create initial database for tripwire and scan
		sudo tripwire --init || error_exit "$LINENO: tripwire configuration failed."
		wait

		# remove common false positives based on OS
		filestoreplace[$filecount]=/etc/tripwire/twpol.txt
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/\\/etc\\/rc.boot/\\#\\/etc\\/rc.boot/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/mail/\\#\\/root\\/mail/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/Mail/\\#\\/root\\/Mail/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.xsession-errors/\\#\\/root\\/.xsession-errors/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.xauth/\\#\\/root\\/.xauth/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.tcshrc/\\#\\/root\\/.tcshrc/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.sawfish/\\#\\/root\\/.sawfish/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.pinerc/\\#\\/root\\/.pinerc/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.mc/\\#\\/root\\/.mc/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.gnome_private/\\#\\/root\\/.gnome_private/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.gnome-desktop/\\#\\/root\\/.gnome-desktop/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.gnome/\\#\\/root\\/.gnome/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.esd_auth/\\#\\/root\\/.esd_auth/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.elm/\\#\\/root\\/.elm/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.cshrc/\\#\\/root\\/.cshrc/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.bash_profile/\\#\\/root\\/.bash_profile/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.bash_logout/\\#\\/root\\/.bash_logout/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.bash_history/\\#\\/root\\/.bash_history/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.amandahosts/\\#\\/root\\/.amandahosts/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.addressbook.lu/\\#\\/root\\/.addressbook.lu/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.addressbook/\\#\\/root\\/.addressbook/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.Xresources/\\#\\/root\\/.Xresources/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.Xauthority/\\#\\/root\\/.Xauthority/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/root\\/.ICEauthority/\\#\\/root\\/.ICEauthority/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/var\\/lock/\\#\\/var\\/lock/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/var\\/run/\\#\\/var\\/run/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/dev/a\\\t\\/dev\\/pts\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "s/\\/proc/\\#\\/proc/" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\#\\/proc/a\\\t\\/proc\\/devices\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/devices/a\\\t\\/proc\\/net\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/net/a\\\t\\/proc\\/tty\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/tty/a\\\t\\/proc\\/sys\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/sys/a\\\t\\/proc\\/cpuinfo\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/cpuinfo/a\\\t\\/proc\\/modules\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/modules/a\\\t\\/proc\\/mounts\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/mounts/a\\\t\\/proc\\/dma\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/dma/a\\\t\\/proc\\/filesystems\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/filesystems/a\\\t\\/proc\\/interrupts\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/interrupts/a\\\t\\/proc\\/ioports\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/ioports/a\\\t\\/proc\\/scsi\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/scsi/a\\\t\\/proc\\/kcore\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/kcore/a\\\t\\/proc\\/self\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/self/a\\\t\\/proc\\/kmsg\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/kmsg/a\\\t\\/proc\\/stat\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/stat/a\\\t\\/proc\\/loadavg\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/loadavg/a\\\t\\/proc\\/uptime\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/uptime/a\\\t\\/proc\\/locks\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/locks/a\\\t\\/proc\\/meminfo\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		sudo sed -i "/\\/proc\\/meminfo/a\\\t\\/proc\\/misc\\t\\t-> \\$\\(Device) ;" /etc/tripwire/twpol.txt || error_exit "$LINENO: File edit failed."
		filecount=$((filecount+1))

		# import edited database file
		sudo twadmin -m P /etc/tripwire/twpol.txt || error_exit "$LINENO: tripwire settings import failed."
		wait

		# rebuild database file and scan with new information
		sudo tripwire --init || error_exit "$LINENO: tripwire configuration failed."
		wait

		beenrun=1
		echo $beenrun > $PWD/flags/installSecurity.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		return
	fi

	return
}


# Function to enable Fail2Ban ownCloud jail and filter
OCFail2Ban()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/OCFail2Ban.txt ]; then
		echo "0" > $PWD/flags/OCFail2Ban.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/OCFail2Ban.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# create owncloud fail2ban filter configuration file
		sudo echo '[Definition]' | sudo tee /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File creation failed."
		sudo chmod 777 /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf '\nfailregex = ^{' >> /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf '"reqId":".*","remoteAddr":".*","app":"core","message":"Login failed: ' >> /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "'.*' \(Remote IP: " >> /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "'<host>'\)" >> /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf '","level":2,"time":".*"}' >> /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf '\n\t^{"reqId":".*","remoteAddr":".*","app":"core","message":"Trusted domain error. \\\"<HOST>\\\" tried to access using \\\".*\\\" as host.","level":2,"time":.*","method":".*","url":".*","user":".*"}' >> /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nignoreregex =" >> /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/filter.d/owncloud.conf || error_exit "$LINENO: Setting file permisions failed."

		filestoreplace[$filecount]=/etc/fail2ban/jail.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		sudo printf "\n\n[owncloud]" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nenabled = true" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nfilter  = owncloud" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nport    = http,https" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nlogpath = /var/log/owncloud.log" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		filecount=$((filecount+1))

		# restart fail2ban
		sudo service fail2ban restart || error_exit "$LINENO: Service restart failed."
		wait

		beenrun=1
		echo $beenrun > $PWD/flags/OCFail2Ban.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait

	else
		return
	fi

	return
}


# Function to enable Fail2Ban PHPVirtualBox jail and filter
PHPVBFail2Ban()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/PHPVBFail2Ban.txt ]; then
		echo "0" > $PWD/flags/PHPVBFail2Ban.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/PHPVBFail2Ban.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# create phpvirtualbox fail2ban filter configuration file
		sudo echo '[Definition]' | sudo tee /etc/fail2ban/filter.d/phpvirtualbox.conf || error_exit "$LINENO: File creation failed."
		sudo chmod 777 /etc/fail2ban/filter.d/phpvirtualbox.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf '\nfailregex = ^\[.*\] \[auth_basic:error\] \[pid .*\] \[client <HOST>:.*\] AH01618: user .* not found: .*, referer: .*?' >> /etc/fail2ban/filter.d/phpvirtualbox.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t" >> /etc/fail2ban/filter.d/phpvirtualbox.conf || error_exit "$LINENO: File edit failed."
		sudo printf '^\[.*\] \[auth_basic:error\] \[pid .*\] \[client <HOST>:.*\] AH01617: user .*: authentication failure for ".*": Password Mismatch, referer: .*?' >> /etc/fail2ban/filter.d/phpvirtualbox.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nignoreregex =" >> /etc/fail2ban/filter.d/phpvirtualbox.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/filter.d/phpvirtualbox.conf || error_exit "$LINENO: Setting file permisions failed."

		filestoreplace[$filecount]=/etc/fail2ban/jail.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		sudo printf "\n\n[phpvirtualbox]" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nenabled = true" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nfilter  = phpvirtualbox" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nport    = http,https" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nlogpath = /var/log/apache2/phpvb-error.log" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		filecount=$((filecount+1))

		# restart fail2ban
		sudo service fail2ban restart || error_exit "$LINENO: Service restart failed."
		wait

		beenrun=1
		echo $beenrun > $PWD/flags/PHPVBFail2Ban.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait

	else
		return
	fi

	return
}


# Function to enable Fail2Ban Netdata jail and filter
NDFail2Ban()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/NDFail2Ban.txt ]; then
		echo "0" > $PWD/flags/NDFail2Ban.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/NDFail2Ban.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# create Netdata fail2ban filter configuration file
		sudo echo '[Definition]' | sudo tee /etc/fail2ban/filter.d/netdata.conf || error_exit "$LINENO: File creation failed."
		sudo chmod 777 /etc/fail2ban/filter.d/netdata.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf '\nfailregex = ^\[.*\] \[auth_basic:error\] \[pid .*\] \[client <HOST>:.*\] AH01618: user .* not found: .*?' >> /etc/fail2ban/filter.d/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t" >> /etc/fail2ban/filter.d/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo printf '^\[.*\] \[auth_basic:error\] \[pid .*\] \[client <HOST>:.*\] AH01617: user .*: authentication failure for ".*": Password Mismatch' >> /etc/fail2ban/filter.d/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nignoreregex =" >> /etc/fail2ban/filter.d/netdata.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/filter.d/netdata.conf || error_exit "$LINENO: Setting file permisions failed."

		# add netdata to jail file
		filestoreplace[$filecount]=/etc/fail2ban/jail.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		sudo printf "\n\n[netdata]" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nenabled = true" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nfilter  = netdata" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nport    = http,https" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nlogpath = /var/log/apache2/netdata-error.log" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		filecount=$((filecount+1))

		# restart fail2ban
		sudo service fail2ban restart || error_exit "$LINENO: Service restart failed."
		wait

		beenrun=1
		echo $beenrun > $PWD/flags/NDFail2Ban.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait

	else
		return
	fi

	return
}


# Function to enable Fail2Ban PHPMyAdmin jail and filter
PHPMAFail2Ban()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/PHPMAFail2Ban.txt ]; then
		echo "0" > $PWD/flags/PHPMAFail2Ban.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/PHPMAFail2Ban.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# Create PHPMyAdmin fail2ban filter configuration file
		sudo echo '[Definition]' | sudo tee /etc/fail2ban/filter.d/phpmyadmin.conf || error_exit "$LINENO: File creation failed."
		sudo chmod 777 /etc/fail2ban/filter.d/phpmyadmin.conf || error_exit "$LINENO: Setting file permisions failed."
		sudo printf '\nfailregex = ^\[.*\] \[auth_basic:error\] \[pid .*\] \[client <HOST>:.*\] AH01618: user .* not found: .*?' >> /etc/fail2ban/filter.d/phpmyadmin.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\n\t" >> /etc/fail2ban/filter.d/phpmyadmin.conf || error_exit "$LINENO: File edit failed."
		sudo printf '^\[.*\] \[auth_basic:error\] \[pid .*\] \[client <HOST>:.*\] AH01617: user .*: authentication failure for ".*": Password Mismatch' >> /etc/fail2ban/filter.d/phpmyadmin.conf || error_exit "$LINENO: File edit failed."
		sudo printf "\nignoreregex =" >> /etc/fail2ban/filter.d/phpmyadmin.conf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/filter.d/phpmyadmin.conf || error_exit "$LINENO: Setting file permisions failed."

		# Add PHPMyAdmin to jail file
		filestoreplace[$filecount]=/etc/fail2ban/jail.local
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		sudo printf "\n\n[phpmyadmin]" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nenabled = true" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nfilter  = phpmyadmin" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nport    = http,https" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo printf "\nlogpath = /var/log/apache2/phpmyadmin-error.log" >> /etc/fail2ban/jail.local || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/fail2ban/jail.local || error_exit "$LINENO: permissions change failed."
		filecount=$((filecount+1))

		# restart fail2ban
		sudo service fail2ban restart || error_exit "$LINENO: Service restart failed."
		wait

		beenrun=1
		echo $beenrun > $PWD/flags/PHPMAFail2Ban.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait

	else
		return
	fi

	return
}
