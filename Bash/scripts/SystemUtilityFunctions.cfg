# Function to update Tripwire database
updateTripwire()
{
	dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "Updating Tripwire Database" --msgbox "Tripwire will run and open a report of all changed files.\n\nIf it all seems good, leave the boxes checked and press ctrl+x\n\nTripwire will update it's database with the changes,\nthen you should be returned to the Utilities Menu" 0 0
	clear
	sudo tripwire --check --interactive
	wait

	return
}


# Function to upgrade ownCloud install after package update
ownCloudUpgrade()
{
	if [ -e $PWD/flags/ownCloud.txt ]; then
		dialog --cr-wrap --clear --yes-label "OK" --no-label "Cancel" --backtitle "Linux Configuration Utility" --title "Upgrading ownCloud" --yesno "System clean up will be run automatically after upgrade.\n\nSelect OK to upgrade ownCloud. Cancel will return you to the menu." 0 0
			case $? in
				0 ) clear
					# Run script to change file permissions for owncloud folders and files to prevent permisions issues during update or upgrade
					sudo $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
					wait

					# Upgrade ownCloud
					sudo -u www-data php /var/www/owncloud/occ upgrade || error_exit "$LINENO: ownCloud upgrade failed."
					wait

					# Turn off maintenance mode
					sudo -u www-data php /var/www/owncloud/occ maintenance:mode --off || error_exit "$LINENO: Setting ownCloud maintenance mode to off failed."

					# Run script to reapply secure settings for owncloud folders and files
					sudo $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
					wait

					# Restart Apache2
					sudo service apache2 restart || error_exit "$LINENO: service restart failed."

					# Remove old packages
					systemCleanUp;
					wait;;

				1 ) clear
					errorTracking;;
			esac
	else
		dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "Upgrading ownCloud" --msgbox "ownCloud is not installed on this system." 6 50
		errorTracking;
	fi

	return
}


# Function to enable secure ownCloud permissions
ownCloudSetPerms()
{
	if [ -e $PWD/flags/ownCloud.txt ]; then

		# Run script to reapply secure settings for owncloud folders and files
		sudo $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
		wait

		# Restart Apache2
		sudo service apache2 restart || error_exit "$LINENO: service restart failed."

	else
		dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "Setting ownCloud Permissions" --msgbox "ownCloud is not installed on this system." 6 50
		errorTracking;
	fi

	return
}


# Function to enable secure ownCloud permissions
ownCloudUnSetPerms()
{
	if [ -e $PWD/flags/ownCloud.txt ]; then

		# Run script to reapply secure settings for owncloud folders and files
		sudo $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
		wait

		# Restart Apache2
		sudo service apache2 restart || error_exit "$LINENO: service restart failed."

	else
		dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "Setting ownCloud Permissions" --msgbox "ownCloud is not installed on this system." 6 50
		errorTracking;
	fi

	return
}


# Function to enable secure ownCloud permissions
ownCloudSetMaint()
{
	if [ -e $PWD/flags/ownCloud.txt ]; then

		# Run script to reapply secure settings for owncloud folders and files
		sudo $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
		wait

		# Turn on maintenance mode
		sudo -u www-data php /var/www/owncloud/occ maintenance:mode --on || error_exit "$LINENO: Setting ownCloud maintenance mode to off failed."

		# Restart Apache2
		sudo service apache2 restart || error_exit "$LINENO: service restart failed."

	else
		dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "ownCloud Maintenance Mode" --msgbox "ownCloud is not installed on this system." 6 50
		errorTracking;
	fi

	return
}


# Function to enable secure ownCloud permissions
ownCloudUnSetMaint()
{
	if [ -e $PWD/flags/ownCloud.txt ]; then

		# Turn off maintenance mode
		sudo -u www-data php /var/www/owncloud/occ maintenance:mode --off || error_exit "$LINENO: Setting ownCloud maintenance mode to off failed."

		# Run script to reapply secure settings for owncloud folders and files
		sudo $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
		wait

		# Restart Apache2
		sudo service apache2 restart || error_exit "$LINENO: service restart failed."

	else
		dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "ownCloud Maintenance Mode" --msgbox "ownCloud is not installed on this system." 6 50
		errorTracking;
	fi

	return
}


# Function to update software
systemUpdateAndUpgrade()
{
	# Run script to change file permissions for owncloud folders and files to prevent permisions issues during update or upgrade
	if [ -e $PWD/flags/ownCloud.txt ]; then
		sudo $PWD/scripts/ownCloudPermissionsUnlock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
		wait
	fi

	# Update existing and in use system
	sudo apt-get update && sudo apt-get -y dist-upgrade || error_exit "$LINENO: update failed."
	wait

	# Restart LXD container service to prevent error message
	sudo service lxd restart
	wait

	# Run script to reapply secure settings for owncloud folders and files
	if [ -e $PWD/flags/ownCloud.txt ]; then
		sudo $PWD/scripts/ownCloudPermissionsLock.sh || error_exit "$LINENO: ownCloud permissions operation failed."
		wait
	fi

	# Update Tripwire if installed
	if [ -e $PWD/flags/installSecurity.txt ]; then
		updateTripwire;
	fi

	return
}


# Function to clean out old software and packages
systemCleanUp()
{
	# Search for out of date kernels and headers, then purge if they exist
	dpkg --list | grep linux-image | awk '{ print $2 }' | sort -V | sed -n '/'`uname -r`'/q;p' | xargs sudo apt-get -y purge || error_exit "$LINENO: search for outdated kernels failed."

	# Update info. Purge and remove out of date packages and settings files
	sudo apt-get update && sudo apt-get -y --purge autoremove || error_exit "$LINENO: autoremove operation failed."
	wait

	# Attempt to find and remove anything left behind by previous commands
	sudo apt-get autoclean || error_exit "$LINENO: cleaning operation failed."
	wait

	# Ditto
	sudo apt-get clean || error_exit "$LINENO: cleaning operation failed."
	wait

	# Rebuild kernel images with new info and remove links to old images
	sudo update-initramfs -c -k all || error_exit "$LINENO: image update failed."
	wait

	# Update boot menu to reflect new kernel images
	sudo update-grub || error_exit "$LINENO: grub update failed."
	wait

	return
}


# Function to exit and reboot
exitAndReboot()
{
	dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "Exit and Reboot" --yesno "Are you certain you wish to exit this program and reboot the system?" 6 75
		case $? in
			0 ) sudo reboot;;

			1 ) return;;
		esac
}


# Function to show configured cron jobs
showCron()
{
	sudo $PWD/showcron.sh || error_exit "$LINENO: Cron display failed."
	wait

	return
}
