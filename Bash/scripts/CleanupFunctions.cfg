# Function to email logs and remove files created during setup
finalCleanUp()
{
	echo " "
	echo "############ Cleaning up logs and temporary files created during setup ############"
	echo "###################################################################################"
	echo " "
	sudo rm $PWD/flags/currentuser.txt

	# one last attempt to remove any outdated packages that have been replaced during install
	systemCleanUp;
	wait

	# clear setup logs in parent directory to eliminate any passwords or info that may be sensitive
	sudo truncate -s 0 /var/log/*.log || error_exit "$LINENO: truncate log files failed."
	wait

	# same, but for child directory
	sudo truncate -s 0 /var/log/**/*.log || error_exit "$LINENO: truncate log files failed."
	wait

	sudo chmod 660 $PWD/flags/*.txt

	return
}


# Function to cleanup MariaDB install
MariaDBCleanup()
{
	if [ -e $PWD/scripts/mariaDBSecure.sh ]; then
		sudo rm $PWD/scripts/mariaDBSecure.sh
	fi

	if [ -e $PWD/flags/mdbrootpass.txt ]; then
		sudo rm $PWD/flags/mdbrootpass.txt
	fi

	if [ -e $PWD/scripts/mariaDBphpmyadmin.sh ]; then
		sudo rm $PWD/scripts/mariaDBphpmyadmin.sh
	fi

	if [ -e $PWD/flags/phpmaadmin.txt ]; then
		sudo rm $PWD/flags/phpmaadmin.txt
	fi

	if [ -e $PWD/flags/phpmapass.txt ]; then
		sudo rm $PWD/flags/phpmapass.txt
	fi

	return
}


# Function to clean up owncloud specific files
ownCloudCleanup()
{
	if [ -e $PWD/scripts/ownCloudMariaDB.sh ]; then
		sudo rm $PWD/scripts/ownCloudMariaDB.sh
	fi

	if [ -e $PWD/flags/ocdbpass.txt ]; then
		sudo rm $PWD/flags/ocdbpass.txt
	fi

	if [ -e $PWD/flags/ocadminpass.txt ]; then
		sudo rm $PWD/flags/ocadminpass.txt
	fi

	return
}


# Function to clean up phpvirtualbox specific files
phpvbCleanup()
{
	if [ -e $PWD/flags/vboxuserpass.txt ]; then
		sudo rm $PWD/flags/vboxuserpass.txt
	fi

	return
}


# Function to clean up netdata specific files
netdataCleanup()
{
	return
}
