# Function to collectively check for and pull current configuration info
getExistingConfig()
{
	# Pull info for Apache ports (ApacheFunctions.cfg -> getHTTPPorts)
	if [ -e $PWD/flags/exthttpport.txt ]; then
		read exthttpport < $PWD/flags/exthttpport.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/exthttpsport.txt ]; then
		read exthttpsport < $PWD/flags/exthttpsport.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/inthttpport.txt ]; then
		read inthttpport < $PWD/flags/inthttpport.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/inthttpsport.txt ]; then
		read inthttpsport < $PWD/flags/inthttpsport.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull info for single or multi-site access (ApacheFunctions.cfg -> getSiteType)
	if [ -e $PWD/flags/singlesite.txt ]; then
		read singlesite < $PWD/flags/singlesite.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull info for phpvbox user pass (VirtualBoxFunctions.cfg -> installVirtualBox)
	if [ -e $PWD/flags/vboxuserpass.txt ]; then
		read vboxuserpass < $PWD/flags/vboxuserpass.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull info for VM parent directory (VirtualBoxFunctions.cfg -> installVirtualBox)
	if [ -e $PWD/flags/vmdir.txt ]; then
		read vmdir < $PWD/flags/vmdir.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull info on server or desktop (GUIOptions.cfg -> serverOrDesktop)
	if [ -e $PWD/flags/servordesk.txt ]; then
		read servordesk < $PWD/flags/servordesk.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull info on server or desktop (GUIOptions.cfg -> guiOrCliPresent)
	if [ -e $PWD/flags/guiorcli.txt ]; then
		read guiorcli < $PWD/flags/guiorcli.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Physical System information (NetworkInterfaceFunctions.cfg -> checkPhysicalSystem)
	if [ -e $PWD/flags/physicalsystem.txt ]; then
		read physicalsystem < $PWD/flags/physicalsystem.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/virttype.txt ]; then
		read virttype < $PWD/flags/virttype.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Subnet and Hosted Server information (NetworkInterfaceFunctions.cfg -> getSubnetInfo)
	if [ -e $PWD/flags/subnetip.txt ]; then
		read subnetip < $PWD/flags/subnetip.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/subnetmask.txt ]; then
		read subnetmask < $PWD/flags/subnetmask.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/hostedserver.txt ]; then
		read hostedserver < $PWD/flags/hostedserver.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/baseip.txt ]; then
		read baseip < $PWD/flags/baseip.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/netclassipv4.txt ]; then
		read netclassipv4 < $PWD/flags/netclassipv4.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Subnet and Hosted Server information (NetworkInterfaceFunctions.cfg -> getCurrentIP)
	getCurrentIP;


	# Pull Network Interface information (NetworkInterfaceFunctions.cfg -> getNetworkInterface)
	if [ -e $PWD/flags/networkInterface.txt ]; then
		read nicname < $PWD/flags/networkInterface.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull VirtualBox information (VirtualBoxFunctions.cfg -> checkIfVirtualBox)
	if [ -e $PWD/flags/virtualboxvm.txt ]; then
		read virtualbox < $PWD/flags/virtualboxvm.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull FQDN information (FQDNInfoFunctions.cfg -> getFQDN)
	if [ -e $PWD/flags/fqdn.txt ]; then
		read fqdn < $PWD/flags/fqdn.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Domain if FQDN is set (FQDNInfoFunctions.cfg -> getDomain)
	if [ -e $PWD/flags/domainname.txt ]; then
		read domainname < $PWD/flags/domainname.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull MariaDB security information (MariaDBFunctions.cfg-> getMariaDBData)
	if [ -e $PWD/flags/mdbrootpass.txt ]; then
		read mdbrootpass < $PWD/flags/mdbrootpass.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull PHPMyAdmin user info for setup (MariaDBFunctions.cfg-> installPHPMyAdmin)
	if [ -e $PWD/flags/phpmaadmin.txt ]; then
		read phpmaadmin < $PWD/flags/phpmaadmin.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/phpmapass.txt ]; then
		read phpmapass < $PWD/flags/phpmapass.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull ownCloud database creation information (ownCloudFunctions.cfg-> getOwnCloudData)
	if [ -e $PWD/flags/ocdbpass.txt ]; then
		read ocdbpass < $PWD/flags/ocdbpass.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/ocadminpass.txt ]; then
		read ocadminpass < $PWD/flags/ocadminpass.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull PHP memory allowance information (ownCloudFunctions.cfg-> getMaxSize)
	if [ -e $PWD/flags/maxupload.txt ]; then
		read maxuploadMB < $PWD/flags/maxupload.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/maxuploadtemp.txt ]; then
		read maxuploadMBtemp < $PWD/flags/maxuploadtemp.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/maxuploadram.txt ]; then
		read maxuploadMBRAM < $PWD/flags/maxuploadram.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Admin E-mail information (EmailFunctions.cfg-> getEmailData)
	if [ -e $PWD/flags/AdminEmail.txt ]; then
		read smtplogin < $PWD/flags/AdminEmail.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull SSL Certificate information (CertificateFunctions.cfg-> getCertificateData)
	if [ -e $PWD/flags/combinedcert.txt ]; then
		read combinedcert < $PWD/flags/combinedcert.txt || error_exit "$LINENO: File creation failed."
	fi

	if [ -e $PWD/flags/letsencrypt.txt ]; then
		read letsencrypt < $PWD/flags/letsencrypt.txt || error_exit "$LINENO: File creation failed."
	fi

	if [ -e $PWD/flags/generatecertificate.txt ]; then
		read generatecertificate < $PWD/flags/generatecertificate.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/certname.txt ]; then
		read clientcertificate < $PWD/flags/certname.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/keyname.txt ]; then
		read clientkey < $PWD/flags/keyname.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/cachainname.txt ]; then
		read clientcachain < $PWD/flags/cachainname.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull info for Primary Samba share directory (UserManagementFunctions.cfg -> addAddtionalUsers)
	if [ -e $PWD/flags/sambaDir.txt ]; then
		read sambadir < $PWD/flags/sambaDir.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Plex Parent Media Folder information (PlexFunctions.cfg -> mediaFolderCreation)
	if [ -e $PWD/flags/plexdir.txt ]; then
		read plexdir < $PWD/flags/plexdir.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Plex Pass information (PlexFunctions.cfg -> plexPassInfo)
	if [ -e $PWD/flags/plexpass.txt ]; then
		read plexpass < $PWD/flags/plexpass.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Client information (ClientInfoFunctions.cfg -> getClientName)
	if [ -e $PWD/flags/ClientName.txt ]; then
		read clientname < $PWD/flags/ClientName.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull Current User information (CurrentUserFunctions.cfg -> getCurrentUser)
	getCurrentUser;


	# Pull stored PHPMyAdmin Hostname information (HostnameFunctions.cfg -> getPHPMyAdminHostname)
	if [ -e $PWD/flags/phpmahostname.txt ]; then
		read phpmahostname < $PWD/flags/phpmahostname.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull stored system Hostname information (HostnameFunctions.cfg -> getNewHostname)
	if [ -e $PWD/flags/hostname.txt ]; then
		read hostname < $PWD/flags/hostname.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull stored ownCloud Hostname information (HostnameFunctions.cfg -> getOwnCloudHostname)
	if [ -e $PWD/flags/ochostname.txt ]; then
		read ochostname < $PWD/flags/ochostname.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull stored Netdata Hostname information (HostnameFunctions.cfg -> getNetdataHostname)
	if [ -e $PWD/flags/ndhostname.txt ]; then
		read ndhostname < $PWD/flags/ndhostname.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull stored phpvirtualbox Hostname information (HostnameFunctions.cfg -> getphpvbHostname)
	if [ -e $PWD/flags/phpvbhostname.txt ]; then
		read phpvbhostname < $PWD/flags/phpvbhostname.txt || error_exit "$LINENO: Read failed."
	fi


	# Pull stored timezone information (TimezoneFunctions.cfg -> setTimeZone && parseTimeZone)
	if [ -e $PWD/flags/tzmain.txt ]; then
		read tzmain < $PWD/flags/tzmain.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/tzcountry.txt ]; then
		read tzcountry < $PWD/flags/tzcountry.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/tzlocale.txt ]; then
		read tzlocale < $PWD/flags/tzlocale.txt || error_exit "$LINENO: Read failed."
	fi

	# Pull OS Version and Distro info
	if [ -e $PWD/flags/OSver.txt ]; then
		read OSver < $PWD/flags/OSver.txt || error_exit "$LINENO: Read failed."
	fi

	if [ -e $PWD/flags/OSdist.txt ]; then
		read OSdist < $PWD/flags/OSdist.txt || error_exit "$LINENO: Read failed."
	fi

	return
}
