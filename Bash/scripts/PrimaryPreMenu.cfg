baseLineS1()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/baseLineS1.txt ]; then
		echo "0" > $PWD/flags/baseLineS1.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun="0"

	# Read beenrun file. Run function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/baseLineS1.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		local anykey=""
		until [ "$anykey" == "n" ]; do
			dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "Baseline Installation" --yesno "If this is a physical system and will be used to run VM's, please enter \
			\nyour bios and ensure that virtualization support and IOMMU are enabled.\nIntel names them VT-d and VT-x, AMD uses SVM and AMD-Vi respectively. \
			\n\nMotherboard manufacturers may refer to these by different names, so please\ntake a moment to check the motherboard manual for the correct settings.\n\nIf these are not already enabled, save yourself some trouble and reinstall the OS \
			\nafter enabling these in bios. This ensures that the correct modules are loaded during\ninstallation. IOMMU often causes changes to PCI device location information, which can\ncause major headaches, likely causing the system to hang during boot, and requiring \
			\neither recovery mode intervention or a live version of the OS to correct the configuration.\nIt will take less time and effort to reinstall the OS than to fix it.\n\nWould you like to reboot and ensure these settings are correct?" 0 0
                                case $? in
					0 ) clear
						anykey="y"
						beenrun=1
						echo "$beenrun" > $PWD/flags/baseLineS1.txt || error_exit "$LINENO: File edit failed."
						sudo reboot;;
					1 ) clear
						anykey="n"
						beenrun=1
						echo "$beenrun" > $PWD/flags/baseLineS1.txt || error_exit "$LINENO: File edit failed.";;
				esac
		done
	else
		return
	fi

	return
}


# Function to update system to baseline configuration
baseLine()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/baseLine.txt ]; then
		echo "0" > $PWD/flags/baseLine.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/baseLine.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then

		# Install dialog requirements
		sudo apt update && sudo apt -y install ncurses-base ncurses-bin ncurses-doc ncurses-examples ncurses-term dialog libncurses5 libncursesw5 libncurses5-dev libncursesw5-dev

		# call function to check if vm or physical system
		checkPhysicalSystem;
		wait

		# if physical system, verify if virtualization needs to be enabled in bios
		if [ "$physicalsystem" == "1" ]; then
			baseLineS1;
		else
			echo "1" > $PWD/flags/baseLineS1.txt || error_exit "$LINENO: File creation failed."
		fi

		# edit grub config to display boot info and enable virtualiztion if necessary
		filestoreplace[$filecount]=/etc/default/grub
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/GRUB_HIDDEN_TIMEOUT_QUIET=true/#GRUB_HIDDEN_TIMEOUT_QUIET=true/" /etc/default/grub || error_exit "$LINENO: Grub edit failed."
		sudo sed -i "s/GRUB_HIDDEN_TIMEOUT=0/#GRUB_HIDDEN_TIMEOUT=0/" /etc/default/grub || error_exit "$LINENO: Grub edit failed."
		sudo sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"/GRUB_CMDLINE_LINUX_DEFAULT=\"text\"/" /etc/default/grub || error_exit "$LINENO: Grub edit failed."
		if [ "$virttype" == "Intel" ]; then
			sudo sed -i "s/GRUB_CMDLINE_LINUX=\"\"/GRUB_CMDLINE_LINUX=\"intel_iommu=on\"/" /etc/default/grub || error_exit "$LINENO: Grub edit failed."
			sudo apt install -y intel-microcode || error_exit "$LINENO: Installation failed."
		elif [ "$virttype" == "AMD" ]; then
			sudo sed -i "s/GRUB_CMDLINE_LINUX=\"\"/GRUB_CMDLINE_LINUX=\"iommu=pt iommu=1\"/" /etc/default/grub || error_exit "$LINENO: Grub edit failed."
			sudo apt install -y amd64-microcode || error_exit "$LINENO: Installation failed."
		elif [ "$virttype" == "none" ]; then
			dialog --cr-wrap --clear --no-cancel --backtitle "Linux Configuration Utility" --title "Baseline Installation" --msgbox "Virtualization not fully supported by CPU or VM,\n or not enabled in bios." 0 0
			clear
		fi
		filecount=$((filecount+1))

		# allow source code to be downloaded for building packages if necessary
		filestoreplace[$filecount]=/etc/apt/sources.list
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo sed -i "s/# deb http/deb http/" /etc/apt/sources.list || error_exit "$LINENO: Sources list edit failed."
		sudo sed -i "s/# deb-src http/deb-src http/" /etc/apt/sources.list || error_exit "$LINENO: Sources list edit failed."
		filecount=$((filecount+1))

		# fix desktop packages and missing server packages
		sudo apt update && sudo apt -y install ubuntu-server || error_exit "$LINENO: Installation failed."

		# update currently installed packages
		systemUpdateAndUpgrade;
		wait

		# install baseline required software
		sudo apt update && sudo apt -y install acpi python dkms haveged rng-tools atop linux-tools-generic iozone3 zlib1g-dev gcc make git traceroute gettext autoconf autogen automake build-essential pkg-config curl ipset iprange libtool plymouth-themes plymouth-label libsys-cpu-perl libsys-meminfo-perl clamav clamav-daemon apparmor-profiles apparmor-profiles-extra apparmor-utils nmap rkhunter chkrootkit ntp sysstat lm-sensors hddtemp htop || error_exit "$LINENO: Installation failed."
		wait

		# set haveged to start at boot
		sudo update-rc.d haveged defaults

		# Install heat and power management tools
		if [ "$physicalsystem" == "1" ]; then
			sudo apt update && sudo apt install -y --no-install-recommends tlp tp-smapi-dkms acpi-call-dkms || error_exit "$LINENO: Installation failed."
			sudo tlp start || error_exit "$LINENO: TLP start failed."
		fi

		# check to see if server or desktop system
		serverOrDesktop;

		# call function to install VirtualBox Guest Additions if installed on a VBox VM
		checkIfVirtualBox;
		wait

		if [ "$physicalsystem" == "1" ]; then
			dialog --cr-wrap --clear --no-cancel --backtitle "Linux Configuration Utility" --title "Baseline Installation" --msgbox "We will now scan for sensors that Linux has drivers for,\nto be used for monitoring system device health,\nsuch as CPU temperatures, HDD temps, etc.\n\nYou'll be prompted for yes or no several times.\nAnswer yes to each prompt." 0 0
			clear
			sudo sensors-detect || error_exit "$LINENO: Sensor detection failed."
			wait

			if [ "$guiorcli" == "gui" ]; then
				# install psensor tool
				sudo apt update && sudo apt install -y psensor || error_exit "$LINENO: Installation failed."
			fi
		fi

		beenrun=1
		echo $beenrun > $PWD/flags/baseLine.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait

		# reboot if Guest Additions were installed
		if [ "$virtualbox" == 1 ]; then
			dialog --cr-wrap --clear --no-cancel --backtitle "Linux Configuration Utility" --title "Baseline Installation" --msgbox "The system needs to be rebooted." 0 0
			clear
			sudo reboot
		fi
	else
		return
	fi

	return
}


# Function to preconfigure system for installation of features
preInstall()
{
	echo " "
	echo "############ Checking prerequisites ############"
	echo "################################################"
	getExistingConfig;
	baseLine;
	setTimeZone;
	parseTimeZone;
	getClientName;
	getNewHostname;
	setNewHostname;
	setRootPass;
	getNetworkInterface;
	getSubnetInfo;
	hardenOperatingSystem;
	getFQDN;
	getEmailData;
	setEmail;
	installSecurity;
	systemLogs;
	enablePrimaryFirewall;

	return
}


# function to update to current version of script
versionUpdate()
{
	# Run updates required for script to function properly
	until [ "$installedversion" == "$currentversion" ]; do
		read installedversion < $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

		getExistingConfig;

		case $installedversion in

			# Version 1.0 to 1.1
			1.0 ) # Install dialog requirements
				sudo apt update && sudo apt -y install ncurses-base ncurses-bin ncurses-doc ncurses-examples ncurses-term dialog libncurses5 libncursesw5 libncurses5-dev libncursesw5-dev

				local pmsfw=""
				local ocfw=""

				# Move scripts
				if [ -e $PWD/ownCloudPermissionsLock.sh ]; then
					mv $PWD/ownCloudPermissionsLock.sh $PWD/scripts/ || error_exit "$LINENO: File move failed."
				fi

				if [ -e $PWD/ownCloudPermissionsUnlock.sh ]; then
					mv $PWD/ownCloudPermissionsUnlock.sh $PWD/scripts/ || error_exit "$LINENO: File move failed."
				fi

				# Add on/off flags for Webmin
				echo "on" > $PWD/flags/WEBMIN.txt || error_exit "$LINENO: File creation failed."

				# Read current installation status and add on/off flag files if ownCloud is installed.
				if [ -e $PWD/flags/setOwnCloudFirewall.txt ]; then
					read ocfw < $PWD/flags/setOwnCloudFirewall.txt || error_exit "$LINENO: Read failed."
					if [ "$ocfw" == 1 ] && [ ! -e $PWD/flags/ownCloudfw.txt ]; then
						echo "on" > $PWD/flags/ownCloudfw.txt || error_exit "$LINENO: File edit failed."
					fi
				fi

				# Read current installation status and add on/off flag files if Apache is installed.
				if [ -e $PWD/flags/setApacheFirewall.txt ]; then
					read ocfw < $PWD/flags/setApacheFirewall.txt || error_exit "$LINENO: Read failed."
					if [ "$ocfw" == 1 ] && [ ! -e $PWD/flags/WEBSERVER.txt ]; then
						echo "on" > $PWD/flags/WEBSERVER.txt || error_exit "$LINENO: File edit failed."
					fi
				fi

				# Read current installation status and add on/off flag files if Plex is installed.
				if [ -e $PWD/flags/setPlexFirewall.txt ]; then
					read pmsfw < $PWD/flags/setPlexFirewall.txt || error_exit "$LINENO: Read failed."
					if [ "$pmsfw" == 1 ] && [ ! -e $PWD/flags/PLEXFW.txt ]; then
						echo "on" > $PWD/flags/PLEXFW.txt || error_exit "$LINENO: File edit failed."
					fi
				fi

				# Add or toggle fail2ban Apache rules if necessary
				fail2banChange;

				# Update version flag
				echo "1.1" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed."

				# Remove old script
				rm Install.sh;;


			# version 1.1 to 1.1.1
			1.1 ) # Install dialog requirements
				sudo apt update && sudo apt -y install ncurses-base ncurses-bin ncurses-doc ncurses-examples ncurses-term dialog libncurses5 libncursesw5 libncurses5-dev libncursesw5-dev

				# Fix on/off flags for Webmin
				local wm=""
				if [ -e $PWD/flags/WEBMIN.txt ]; then
					read wm < $PWD/flags/WEBMIN.txt || error_exit "$LINENO: Read failed."
					if [ "$wm" == "on" ]; then
						mv $PWD/flags/WEBMIN.txt $PWD/flags/WEBMINFW.txt || error_exit "$LINENO: File move failed."
						echo "1" > $PWD/flags/webmin.txt || error_exit "$LINENO: File creation failed."
						echo "1" > $PWD/flags/setWebminFirewall.txt || error_exit "$LINENO: File creation failed."
						echo "1" > $PWD/flags/webminInstall.txt || error_exit "$LINENO: File creation failed."
					fi
				fi

				# Update version flag
				echo "1.1.1" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed.";;


			# version 1.1.1 to 1.1.2
			1.1.1 )	# Install dialog requirements
				sudo apt update && sudo apt -y install ncurses-base ncurses-bin ncurses-doc ncurses-examples ncurses-term dialog libncurses5 libncursesw5 libncurses5-dev libncursesw5-dev

				# Check for physical server or VM
				if [ ! -e $PWD/flags/checkPhysicalSystem.txt ]; then
					if [ "$hostedserver" == "1" ] || [ "$virtualbox" == "1" ]; then
						physicalsystem=0
						echo $physicalsystem > $PWD/flags/physicalsystem.txt || error_exit "$LINENO: File creation failed."
						echo "1" > $PWD/flags/checkPhysicalSystem.txt || error_exit "$LINENO: File creation failed."
					else
						checkPhysicalSystem;
					fi
				fi

				# Change VirtualBox flags and recheck VirtualBox install because I had a bad day
				if [ -e $PWD/flags/checkIfVirtualBox.txt ]; then
					mv $PWD/flags/checkIfVirtualBox.txt $PWD/flags/checkIfVirtualBoxVM.txt || error_exit "$LINENO: File move failed."
					if [ "$physicalsystem" != "1" ]; then
						local crct="n"
						until [ "$crct" == "y" ] ; do
							dialog --cr-wrap --clear --backtitle "Linux Configuration Utility" --title "VirtualBox VM?" --yesno "Is this OS installed on a VirtualBox VM?" 0 0
								case $? in
									0 ) clear
										crct="y"
										virtualbox="1";;

									1 ) clear
										crct="y"
										virtualbox="0";;
								esac
						done
					else
						virtualbox="0"
					fi

					echo $virtualbox > $PWD/flags/virtualboxvm.txt || error_exit "$LINENO: File creation failed."
				fi

				# check for HTTP port info
				if [ -e $PWD/flags/installApache.txt ] && [ ! -e $PWD/flags/getHTTPPorts.txt ]; then
					getHTTPPorts;
				fi

				# Update version flag
				echo "1.1.2" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed.";;


			# version 1.1.2 to 1.1.3
			1.1.2 ) # Install dialog requirements
				sudo apt update && sudo apt -y install ncurses-base ncurses-bin ncurses-doc ncurses-examples ncurses-term dialog libncurses5 libncursesw5 libncurses5-dev libncursesw5-dev

				# Shut Fail2ban up
				filestoreplace[$filecount]=/etc/fail2ban/jail.conf
                		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
                		sudo sed -i 's/action = %(action_mw)s/action = %(action_)s/' /etc/fail2ban/jail.conf || error_exit "$LINENO: File edit failed."
				filecount=$((filecount+1))

				# Limit SSH to admin group
				filestoreplace[$filecount]=/etc/ssh/sshd_config
				sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
				sudo sed -i "/DebianBanner no/ a AllowGroups admin" /etc/ssh/sshd_config || error_exit "$LINENO: File edit failed."
				filecount=$((filecount+1))

				# Fix baseline section separation
				if [ ! -e $PWD/flags/baseLineS1.txt ]; then
					echo "1" > $PWD/flags/baseLineS1.txt || error_exit "$LINENO: File creation failed."
				fi

				# Get baseip if not done before
				if [ ! -e $PWD/flags/baseip.txt ] || [ ! -e $PWD/flags/netclassipv4.txt ]; then
					if [ "$physicalsystem" == "1" ]; then
						echo 0 > $PWD/flags/getSubnetInfo.txt || error_exit "$LINENO: File edit failed."
						getSubnetInfo;
					elif [ "$physicalsystem" == "0" ]; then
						echo 0 > $PWD/flags/getSubnetInfo.txt || error_exit "$LINENO: File edit failed."
						physicalsystem=1
						getSubnetInfo;
						physicalsystem=0
					fi
				fi

				# Fix Apache email flag and fix default page port if necessary, pull domainname
				if [ -e $PWD/flags/installApache.txt ]; then
					# Check to see if beenrun file exists. If not, create it.
					if [ ! -e $PWD/flags/setApacheEmail.txt ]; then
						echo "1" > $PWD/flags/setApacheEmail.txt || error_exit "$LINENO: File creation failed."
					fi

					# configure initial http site
					filestoreplace[$filecount]=/etc/apache2/sites-available/000-default.conf
					sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
					if [ "$exthttpsport" != "$inthttpsport" ]; then
						sudo sed -i "s/\\tRedirect permanent \"\/\" \"https:\/\/$fqdn\"/\\tRedirect permanent \"\/\" \"https:\/\/$fqdn:$exthttpsport\/\"/" /etc/apache2/sites-available/000-default.conf || error_exit "$LINENO: File edit failed."
					fi
					if [ "$exthttpsport" == "$inthttpsport" ]; then
						sudo sed -i "s/\\tRedirect permanent \"\/\" \"https:\/\/$fqdn\"/\\tRedirect permanent \"\/\" \"https:\/\/$fqdn\/\"/" /etc/apache2/sites-available/000-default.conf || error_exit "$LINENO: File edit failed."
					fi
					filecount=$((filecount+1))

					# restart apache2 with new default site
					sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."

					getDomain;

				fi

				# Fix owncloud site conf and store ochostname
				if [ -e $PWD/flags/ownCloud.txt ]; then

					# Split MariaDB from ownCloud
					sudo rm $PWD/flags/ownCloudCleanup.txt
					echo "1" > $PWD/flags/createMariaDBExpectScript.txt || error_exit "$LINENO: File edit failed."
					echo "1" > $PWD/flags/getMariaDBData.txt || error_exit "$LINENO: File edit failed."
					echo "1" > $PWD/flags/getOwnCloudData.txt || error_exit "$LINENO: File edit failed."

					# store ochostname
					ochostname="$hostname"
					echo "$ochostname" > $PWD/flags/ochostname.txt || error_exit "$LINENO: File creation failed."

					# fix owncloud conf
					sudo a2disconf owncloud
					sudo rm /etc/apache2/conf-available/owncloud.conf

					# create a consolidated owncloud website configuation
					filestoreplace[$filecount]=/etc/apache2/sites-available/owncloud.conf
					sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
					sudo truncate -s 0 /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo chmod 777 /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: Setting file permisions failed."
					sudo printf '<VirtualHost *:80>' >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tServerName $ochostname.$domainname" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\tDocumentRoot /var/www/owncloud" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					if [ "$exthttpsport" != "$inthttpsport" ]; then
						sudo printf "\n\n\tRedirect permanent \"/\" \"https://$ochostname.$domainname:$exthttpsport/\"" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					elif [ "$exthttpsport" == "$inthttpsport" ]; then
						sudo printf "\n\n\tRedirect permanent \"/\" \"https://$ochostname.$domainname/\"" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					fi
					sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/error.log" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/access.log combined" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n<VirtualHost *:443>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tServerName $ochostname.$domainname" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tServerAdmin $smtplogin" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\tDocumentRoot /var/www/owncloud" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\tErrorLog \${APACHE_LOG_DIR}/error.log" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tCustomLog \${APACHE_LOG_DIR}/access.log combined" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\tSSLEngine on" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tSSLCertificateFile\t\t/etc/ssl/certs/$clientcertificate" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tSSLCertificateKeyFile\t\t/etc/ssl/private/$clientkey" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					if [ -e $PWD/flags/cachainname.txt ]; then
						sudo printf "\n\tSSLCertificateChainFile\t\t/etc/ssl/certs/$clientcachain" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					fi
					sudo printf "\n\n\tAlias / \"/var/www/owncloud/\"" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\t<Directory /var/www/owncloud/>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\tOptions +FollowSymlinks" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\tAllowOverride All" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\t\t<IfModule mod_dav.c>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\t\tDav off" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\t</IfModule>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\t\tSetEnv HOME /var/www/owncloud" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\tSetEnv HTTP_HOME /var/www/owncloud" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\t</Directory>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\t<FilesMatch \"\.(cgi|shtml|phtml|php)$\">" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t</FilesMatch>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\t<Directory /usr/lib/cgi-bin>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\tSSLOptions +StdEnvVars" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t</Directory>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\tBrowserMatch \"MSIE [2-6]\" \\" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\tnokeepalive ssl-unclean-shutdown \\" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\t\tdowngrade-1.0 force-response-1.0" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: File edit failed."
					sudo chmod 644 /etc/apache2/sites-available/owncloud.conf || error_exit "$LINENO: Setting file permisions failed."
					filecount=$((filecount+1))

					# restart apache2 with new owncloud site
					sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."

				fi

				# Remove backed up files after complete
				cleanUpSuccessful;
				wait

				# check to see if server or desktop system
				serverOrDesktop;

				# check if gui will be installed or is installed
				guiOrCliPresent;

				# Add or toggle fail2ban Apache rules if necessary
				fail2banChange;

				# Update version flag
				echo "1.1.3" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed.";;


			# Version 1.1.3 to 1.1.4
			1.1.3 ) # Install dialog requirements
				sudo apt update && sudo apt -y install ncurses-base ncurses-bin ncurses-doc ncurses-examples ncurses-term dialog libncurses5 libncursesw5 libncurses5-dev libncursesw5-dev

				### Fix issue with default random site matches if multiple sites enabled
				# Rename default site
				if [ -e /etc/apache2/sites-available/000-default.conf ]; then
					sudo a2dissite 000-default || error_exit "$LINENO: Site deactivation failed."
					sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/0-default.conf || error_exit "$LINENO: File copy failed."
					sudo rm /etc/apache2/sites-available/000-default.conf
					sudo a2ensite 0-default || error_exit "$LINENO: Site activation failed."
				fi

				# Rename default SSL site
				if [ -e /etc/apache2/sites-available/default-ssl.conf ]; then
					sudo a2dissite default-ssl || error_exit "$LINENO: Site deactivation failed."
					sudo cp /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-available/1-default-ssl.conf || error_exit "$LINENO: File copy failed."
					sudo rm /etc/apache2/sites-available/default-ssl.conf
					sudo a2ensite 1-default-ssl || error_exit "$LINENO: Site activation failed."
				fi

				# Rename ownCloud site
				if [ -e /etc/apache2/sites-available/owncloud.conf ]; then
					sudo a2dissite owncloud || error_exit "$LINENO: Site deactivation failed."
					sudo cp /etc/apache2/sites-available/owncloud.conf /etc/apache2/sites-available/2-owncloud.conf || error_exit "$LINENO: File copy failed."
					sudo rm /etc/apache2/sites-available/owncloud.conf
					sudo a2ensite 2-owncloud || error_exit "$LINENO: Site activation failed."
				fi

				# Rename Netdata site
				if [ -e /etc/apache2/sites-available/netdata-ssl.conf ]; then
					sudo a2dissite netdata-ssl || error_exit "$LINENO: Site deactivation failed."
					sudo cp /etc/apache2/sites-available/netdata-ssl.conf /etc/apache2/sites-available/3-netdata-ssl.conf || error_exit "$LINENO: File copy failed."
					sudo rm /etc/apache2/sites-available/netdata-ssl.conf
					sudo a2ensite 3-netdata-ssl || error_exit "$LINENO: Site activation failed."
				fi

				# Rename PHPVirtualBox site
				if [ -e /etc/apache2/sites-available/phpvirtualbox-ssl.conf ]; then
					sudo a2dissite phpvirtualbox-ssl || error_exit "$LINENO: Site deactivation failed."
					sudo cp /etc/apache2/sites-available/phpvirtualbox-ssl.conf /etc/apache2/sites-available/4-phpvirtualbox-ssl.conf || error_exit "$LINENO: File copy failed."
					sudo rm /etc/apache2/sites-available/phpvirtualbox-ssl.conf
					sudo a2ensite 4-phpvirtualbox-ssl || error_exit "$LINENO: Site activation failed."
				fi

				# Create a catchall virtualhost configuation
				if [ ! -e /etc/apache2/sites-available/99-catchall.conf ]; then
					sudo echo '<VirtualHost *:80>' | sudo tee /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File creation failed."
					sudo chmod 777 /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: Setting file permisions failed."
					sudo printf "\n\tServerName null" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tServerAlias *" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\tRedirect 404 /" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n<VirtualHost *:443>" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tServerName null" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\tServerAlias *" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n\n\tRedirect 404 /" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo printf "\n</VirtualHost>" >> /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: File edit failed."
					sudo chmod 644 /etc/apache2/sites-available/99-catchall.conf || error_exit "$LINENO: Setting file permisions failed."

					sudo a2ensite 99-catchall || error_exit "$LINENO: Site activation failed."
				fi

				# Add PHPMyAdmin if applicable
				if [ -e $PWD/flags/installApache.txt ] && [ ! -e /etc/apache2/sites-available/5-phpmyadmin-ssl.conf ]; then
					getPHPMyAdminHostname;
					getMariaDBData;
					installPHPMyAdmin;
					if [ "$singlesite" == 0 ]; then
						setSiteHostnames $phpmahostname $domainname;
					fi
					createPHPMyAdminExpectScript;
					phpMyAdminDBConfig;
					phpMyAdminWebConfig;
					if [ "$letsencrypt" == 1 ]; then
						renewLetsEncrypt;
					fi
					PHPMAFail2ban;
					MariaDBCleanup;
					finalCleanUp;
				fi

				# restart apache2 with new conf names
				sudo systemctl restart apache2 || error_exit "$LINENO: Apache restart failed."
				wait

				### Add missing Fail2Ban confs
				# Add OC fail2ban
				if [ ! -e /etc/fail2ban/filter.d/owncloud.conf ] && [ -e $PWD/flags/ownCloud.txt ]; then
					OCFail2Ban;
				fi

				# Add Netdata fail2ban
				if [ ! -e /etc/fail2ban/filter.d/netdata.conf ] && [ -e $PWD/flags/Netdata.txt ]; then
					NDFail2Ban;
				fi

				# Add phpvirtualbox fail2ban
				if [ ! -e /etc/fail2ban/filter.d/phpvirtualbox.conf ] && [ -e $PWD/flags/VirtualBox.txt ]; then
					PHPVBFail2Ban;
				fi

				### Fix missing log rotate settings
				# add netdata logrotate
				if [ -e $PWD/flags/Netdata.txt ]; then
					netdataLogs;
				fi

				# add virtualbox logrotate
				if [ -e $PWD/flags/VirtualBox.txt ]; then
					virtualBoxLogs;
				fi

				# add samba logrotate
				if [ -e $PWD/flags/samba.txt ]; then
					sambaLogs;
				fi

				# add pm-utils logrotate
				if [ -e /etc/logrotate.d/pm-utils ]; then
					filestoreplace[$filecount]=/etc/logrotate.d/pm-utils
					sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
					sudo truncate -s 0 /etc/logrotate.d/pm-utils || error_exit "$LINENO: truncate file failed."
				elif [ ! -e /etc/logrotate.d/pm-utils ]; then
					sudo echo "# pm-utils log rotation" | sudo tee /etc/logrotate.d/pm-utils || error_exit "$LINENO: File creation failed."
					filestoreplace[$filecount]=/etc/logrotate.d/pm-utils
					sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
				fi
				sudo chmod 777 /etc/logrotate.d/pm-utils || error_exit "$LINENO: permissions change failed."
				sudo printf "\n" >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo printf '/var/log/pm-suspend.log /var/log/pm-powersave.log {' >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo printf "\nweekly" >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo printf "\nrotate 12" >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo printf "\ncompress" >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo printf "\ndelaycompress" >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo printf "\nmissingok" >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
        			sudo printf "\nnotifempty" >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo printf '}' >> /etc/logrotate.d/pm-utils || error_exit "$LINENO: File edit failed."
				sudo chmod 644 /etc/logrotate.d/pm-utils || error_exit "$LINENO: permissions change failed."
				filecount=$((filecount+1))

				### Add misc apps, and misc fixes
				# Add DKIM E-mail verification
				if ([ ! -e $PWD/flags/installDKIM.txt ] && [ -e $PWD/flags/setApacheEmail.txt ]) && ([ "$generatecertificate" == 0] || [ "$letsencrypt" == 1 ]); then
					installDKIM;

					if [ "$singlesite" == 0 ]; then
						# Add phpmyadmin info
						addSubDomainDKIM $phpmahostname $domainname;

						# Add ownCloud info
						if [ -e $PWD/flags/ownCloud.txt ]; then
							addSubDomainDKIM $ochostname $domainname;
						fi

						# Add phpvirtualbox info
						if [ -e $PWD/flags/VirtualBox.txt ]; then
							addSubDomainDKIM $phpvbhostname $domainname;
						fi

						# Add Netdata info
						if [ -e $PWD/flags/Netdata.txt ]; then
							addSubDomainDKIM $ndhostname $domainname;
						fi
					fi
				fi

				# add iozone3 and mail utils for attachments and troubleshooting
				sudo apt update && sudo apt -y install iozone3 p7zip-full mutt swaks || error_exit "$LINENO: Installation failed."

				# Install missed basic linux utils
				sudo apt update && sudo apt install -y apparmor-profiles-extra linux-tools-generic gettext || error_exit "$LINENO: Installation failed."

				# Scan for system sensors
				if [ "$physicalsystem" == "1" ]; then
					dialog --cr-wrap --clear --no-cancel --backtitle "Linux Configuration Utility" --title "Baseline Installation" --msgbox "We will now scan for sensors that Linux has drivers for,\nto be used for monitoring system device health,\nsuch as CPU temperatures, HDD temps, etc.\n\nYou'll be prompted for yes or no several times.\nAnswer yes to each prompt." 0 0
					clear
					sudo sensors-detect || error_exit "$LINENO: Sensor detection failed."
					wait
				fi

				# Prompt for GUI
				if [ -e $PWD/flags/serverOrDesktop.txt ] || [ -e $PWD/flags/guiOrCliPresent.txt ]; then
					sudo rm $PWD/flags/serverOrDesktop.txt $PWD/flags/guiOrCliPresent.txt
					serverOrDesktop;
				fi

				# Install heat and power management tools
				if [ "$physicalsystem" == "1" ]; then
					sudo apt update && sudo apt install -y --no-install-recommends tlp tp-smapi-dkms acpi-call-dkms || error_exit "$LINENO: Installation failed."
					sudo tlp start || error_exit "$LINENO: TLP start failed."
				fi

				# increase message size to 25MB
				filestoreplace[$filecount]=/etc/postfix/main.cf
				sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
				sudo chmod 777 /etc/postfix/main.cf || error_exit "$LINENO: Setting file permisions failed."
				sudo printf "\nmessage_size_limit=25600000" >> /etc/postfix/main.cf || error_exit "$LINENO: File edit failed."
				sudo chmod 644 /etc/postfix/main.cf || error_exit "$LINENO: Setting file permisions failed."
				filecount=$((filecount+1))

				# Remove backed up files after complete
				cleanUpSuccessful;
				wait

				# Update version flag
				echo "1.1.4" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed.";;


			# Version 1.1.4 to 1.1.5
			1.1.4 ) # remove autostart virtualbox feature until fixed
				if [ -e /etc/init.d/StartVMs ]; then
					sudo update-rc.d StartVMs remove
					sudo rm /etc/init.d/StartVMs
				fi

				# Update version flag
				echo "1.1.5" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed.";;


			# Version 1.1.5 to 1.1.6
			1.1.5 ) # Update version flag
				echo "1.1.6" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed.";;


			# Version 1.1.6 to 1.1.7
			1.1.6 )	# Fix Virtualbox install by using Oracle official repo, not Ubuntu
				if [ -e $PWD/flags/VirtualBox.txt ]; then
					# Remove old VirtualBox
					sudo apt update && sudo apt -y remove virtualbox virtualbox-ext-pack

					# Add VirtualBox repo
					filestoreplace[$filecount]=/etc/apt/sources.list
					sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
					sudo sed -i "/deb-src http\:\/\/security.ubuntu.com\/ubuntu xenial-security multiverse/ a \\\n\\\ndeb http\:\/\/download.virtualbox.org\/virtualbox\/debian xenial contrib" /etc/apt/sources.list || error_exit "$LINENO: Sources list edit failed."
					filecount=$((filecount+1))

					# Add repo key
					wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - || error_exit "$LINENO: Key add failed."

					# Install Virtualbox
					sudo apt update && sudo apt -y install virtualbox-5.1 php7.0-soap php-pear || error_exit "$LINENO: Installation failed."

					# Install Extension Pack
					wget http://download.virtualbox.org/virtualbox/5.1.20/Oracle_VM_VirtualBox_Extension_Pack-5.1.20-114628.vbox-extpack || error_exit "$LINENO: File download failed."
					sudo VBoxManage extpack install --accept-license=715c7246dc0f779ceab39446812362b2f9bf64a55ed5d3a905f053cfab36da9e Oracle_VM_VirtualBox_Extension_Pack-5.1.20-114628.vbox-extpack || error_exit "$LINENO: Installation failed."

					# Edit VirtualBox service configuration
					filestoreplace[$filecount]=/etc/default/virtualbox
					sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
					sudo sed -i '/VBOXWEB\_USER\=vbox/aVBOXAUTOSTART_DB=/etc/vbox' /etc/default/virtualbox || error_exit "$LINENO: File edit failed."
					sudo sed -i '/VBOXAUTOSTART\_DB\=\/etc\/vbox/aVBOXAUTOSTART_CONFIG=/etc/vbox/autostart.cfg' /etc/default/virtualbox || error_exit "$LINENO: File edit failed."
					sudo sed -i '/VBOXAUTOSTART\_CONFIG\=\/etc\/vbox\/autostart.cfg/aVBOXAUTOSTART_STOP_DELAY=15' /etc/default/virtualbox || error_exit "$LINENO: File edit failed."
					filecount=$((filecount+1))

					# Apply folder and file permissions
					sudo chmod -R 770 $vmdir || error_exit "$LINENO: Setting folder permisions failed."
					sudo chown -R root:vboxusers $vmdir || error_exit "$LINENO: Setting folder ownership failed."

					# Create autostart config folder
					sudo mkdir -p /etc/vbox || error_exit "$LINENO: Folder creation failed."

					# Create autostart config file
					sudo echo '# Default policy is to deny starting a VM, the other option is "allow".' | sudo tee /etc/vbox/autostart.cfg || error_exit "$LINENO: File creation failed."
					sudo chmod 777 /etc/vbox/autostart.cfg || error_exit "$LINENO: Setting file permisions failed."
					sudo printf "\ndefault_policy = deny" >> /etc/vbox/autostart.cfg || error_exit "$LINENO: File edit failed."
					sudo printf "\n\nexception_list = vbox" >> /etc/vbox/autostart.cfg || error_exit "$LINENO: File edit failed."
					sudo printf "\n\nvbox = {\nallow = true\n}" >> /etc/vbox/autostart.cfg || error_exit "$LINENO: File edit failed."
					sudo chmod 644 /etc/vbox/autostart.cfg || error_exit "$LINENO: Setting file permisions failed."
					filecount=$((filecount+1))

					# Set Autostart file and folder permissions
					sudo chgrp vboxusers /etc/vbox || error_exit "$LINENO: Setting file permisions failed."
					sudo chmod 1775 /etc/vbox || error_exit "$LINENO: Setting file permisions failed."
					sudo echo 1 > /etc/vbox/vbox.start || error_exit "$LINENO: File creation failed."
					sudo echo 1 > /etc/vbox/vbox.stop || error_exit "$LINENO: File creation failed."
					sudo chown vbox:vbox /etc/vbox/vbox.start /etc/vbox/vbox.stop || error_exit "$LINENO: Setting file permisions failed."
					sudo su vbox
					VBoxManage setproperty autostartdbpath /etc/vbox
					exit
					sudo systemctl enable vboxautostart-service || error_exit "$LINENO: Service registry failed."

					# Enable vboxweb service
					sudo systemctl enable vboxweb.service || error_exit "$LINENO: Service registry failed."

					# Start vboxweb service
					sudo systemctl start vboxweb.service || error_exit "$LINENO: Service restart failed."

					# Restart services
					sudo systemctl restart apache2.service && sudo systemctl restart vboxweb.service || error_exit "$LINENO: Services restart failed."

					# Remove unnecessary packages
					sudo apt update && sudo apt purge || error_exit "$LINENO: Installation cleanup failed."
				fi

				# Install missed basic linux utils
				sudo apt update && sudo apt install -y acpi || error_exit "$LINENO: Installation failed."

				# Install microcode updates
				if [ "$virttype" == "Intel" ]; then
					sudo apt update && sudo apt install -y intel-microcode || error_exit "$LINENO: Installation failed."
				elif [ "$virttype" == "AMD" ]; then
					sudo apt update && sudo apt install -y amd64-microcode || error_exit "$LINENO: Installation failed."
				fi

				# Remove backed up files after complete
				cleanUpSuccessful;
				wait

				# Update version flag
				echo "1.1.7" > $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."

				# Make sure permissions are applied
				sudo chmod -R 770 $PWD || error_exit "$LINENO: File permissions edit failed.";;


			# Version 1.1.7
			1.1.7 )	return;;


			* ) error_exit "$LINENO: This version is not supported, or something has gone wrong.";;

		esac
	done

	return
}


# function to ensure system is up to date and matches current version of the script
versionCheck()
{
	# Check to see if version file exists. If not, create it.
	if [ ! -e $PWD/flags ]; then
		mkdir -p $PWD/flags || error_exit "$LINENO: Folder creation failed."
	fi

	if [ -e $PWD/alreadyrun ]; then
		cp -R -a $PWD/alreadyrun/. $PWD/flags/ || error_exit "$LINENO: File copy failed."
		wait
		rm -R $PWD/alreadyrun
	fi

	if [ ! -e $PWD/flags/installedversion.txt ]; then
		echo "$currentversion" > $PWD/flags/installedversion.txt || error_exit "$LINENO: File creation failed."
	fi

	# Determine installed version of script
	read installedversion < $PWD/flags/installedversion.txt || error_exit "$LINENO: Read failed."
	if [ "$installedversion" == "$currentversion" ]; then
		return
	else
		versionUpdate;
	fi

	return
}
