# Firewall menu 3
firewallMenu3()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Firewall Menu 3" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${firewallmenu3options[0]}" \
			2 "${firewallmenu3options[1]}" \
			3 "${firewallmenu3options[2]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				setWildflyFirewall;;
			2 ) clear
				disableWildflyFirewall;;
			3 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Firewall menu 2
firewallMenu2()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Firewall Menu 2" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${firewallmenu2options[0]}" \
			2 "${firewallmenu2options[1]}" \
			3 "${firewallmenu2options[2]}" \
			4 "${firewallmenu2options[3]}" \
			5 "${firewallmenu2options[4]}" \
			6 "${firewallmenu2options[5]}" \
			7 "${firewallmenu2options[6]}" \
			8 "${firewallmenu2options[7]}" \
			9 "${firewallmenu2options[8]}" \
			10 "${firewallmenu2options[9]}" \
			11 "${firewallmenu2options[10]}" \
			12 "${firewallmenu2options[11]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				setSambaFirewall;;
			2 ) clear
				disableSambaFirewall;;
			3 ) clear
				setWebminFirewall;;
			4 ) clear
				disableWebminFirewall;;
			5 ) clear
				setRDPFirewall;;
			6 ) clear
				disableRDPFirewall;;
			7 ) clear
				setPHPVirtualBoxFirewall;;
			8 ) clear
				disablePHPVirtualBoxFirewall;;
			9 ) clear
				setJBOSSFirewall;;
			10 ) clear
				disableJBOSSFirewall;;
			11 ) firewallMenu3;;
			12 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Firewall menu 1
firewallMenu1()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Firewall Menu 1" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${firewallmenu1options[0]}" \
			2 "${firewallmenu1options[1]}" \
			3 "${firewallmenu1options[2]}" \
			4 "${firewallmenu1options[3]}" \
			5 "${firewallmenu1options[4]}" \
			6 "${firewallmenu1options[5]}" \
			7 "${firewallmenu1options[6]}" \
			8 "${firewallmenu1options[7]}" \
			9 "${firewallmenu1options[8]}" \
			10 "${firewallmenu1options[9]}" \
			11 "${firewallmenu1options[10]}" \
			12 "${firewallmenu1options[11]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				enableRsyncFirewall;;
			2 ) clear
				disableRsyncFirewall;;
			3 ) clear
				enableNFSFirewall;;
			4 ) clear
				disableNFSFirewall;;
			5 ) clear
				enableCUPSFirewall;;
			6 ) clear
				disableCUPSFirewall;;
			7 ) clear
				enableMySQLFirewall;;
			8 ) clear
				disableMySQLFirewall;;
			9 ) clear
				enableiSCSIFirewall;;
			10 ) clear
				disableiSCSIFirewall;;
			11 ) firewallMenu2;;
			12 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# ownCloud menu
ownCloudMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "ownCloud Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${owncloudmenuoptions[0]}" \
			2 "${owncloudmenuoptions[1]}" \
			3 "${owncloudmenuoptions[2]}" \
			4 "${owncloudmenuoptions[3]}" \
			5 "${owncloudmenuoptions[4]}" \
			6 "${owncloudmenuoptions[5]}" \
			7 "${owncloudmenuoptions[6]}" \
			8 "${owncloudmenuoptions[7]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				ownCloud;;
			2 ) ownCloudUpgrade;;
			3 ) clear
				ownCloudSetPerms;;
			4 ) clear
				ownCloudUnSetPerms;;
			5 ) clear
				ownCloudSetMaint;;
			6 ) clear
				ownCloudUnSetMaint;;
			7 ) removeOwnCloudMenu;;
			8 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Samba menu
sambaMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Samba Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${sambamenuoptions[0]}" \
			2 "${sambamenuoptions[1]}" \
			3 "${sambamenuoptions[2]}" \
			4 "${sambamenuoptions[3]}" \
			5 "${sambamenuoptions[4]}" \
			6 "${sambamenuoptions[5]}" \
			7 "${sambamenuoptions[6]}" \
			8 "${sambamenuoptions[7]}" \
			9 "${sambamenuoptions[8]}" \
			10 "${sambamenuoptions[9]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				samba;;
			2 ) sambaAddUsers;;
			3 ) showUsersInGroup smbgrp;;
			4 ) userchoice="group-share"
				showGroups;;
			5 ) addSambaShareGroup;;
			6 ) addUsersSambaGroupShare;;
			7 ) sambaAddGroupShare ro;;
			8 ) sambaAddGroupShare rw;;
			9 ) removeSambaMenu;;
			10 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Plex menu
plexMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Plex Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${plexmenuoptions[0]}" \
			2 "${plexmenuoptions[1]}" \
			3 "${plexmenuoptions[2]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				plex;;
			2 ) removePlexMenu;;
			3 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Webmin menu
webminMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Webmin Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${webminmenuoptions[0]}" \
			2 "${webminmenuoptions[1]}" \
			3 "${webminmenuoptions[2]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				webmin;;
			2 ) uninstallWebmin;;
			3 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Netdata menu
netdataMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Netdata Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${netdatamenuoptions[0]}" \
			2 "${netdatamenuoptions[1]}" \
			3 "${netdatamenuoptions[2]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				Netdata;;
			2 ) uninstallNetdata;;
			3 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# VirtualBox menu
virtualBoxMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "VirtualBox Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${virtualboxmenuoptions[0]}" \
			2 "${virtualboxmenuoptions[1]}" \
			3 "${virtualboxmenuoptions[2]}" \
			4 "${virtualboxmenuoptions[3]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				VirtualBox;;
			2 ) uninstallVirtualBox;;
			3 ) if [ "$virtualbox" == "1" ]; then
					installGuestAdditions;
				else
					errorTracking;
				fi;;
			4 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Menu for web-based admin sites
webAdminMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Website User Admin Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${webadminmenuoptions[0]}" \
			2 "${webadminmenuoptions[1]}" \
			3 "${webadminmenuoptions[2]}" \
			4 "${webadminmenuoptions[3]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) addPHPMyAdminSiteUser;;
			2 ) addPHPVirtualBoxSiteUser;;
			3 ) addNetdataSiteUser;;
			4 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# System Utility menu
systemMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "System Utility Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${systemmenuoptions[0]}" \
			2 "${systemmenuoptions[1]}" \
			3 "${systemmenuoptions[2]}" \
			4 "${systemmenuoptions[3]}" \
			5 "${systemmenuoptions[4]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) clear
				systemCleanUp;;
			2 ) clear
				systemUpdateAndUpgrade;;
			3 ) updateTripwire;;
			4 ) showCron;;
			5 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Users menu 2
usersMenu2()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Users Menu 2" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${usersmenu2options[0]}" \
			2 "${usersmenu2options[1]}" \
			3 "${usersmenu2options[2]}" \
			4 "${usersmenu2options[3]}" \
			5 "${usersmenu2options[4]}" \
			6 "${usersmenu2options[5]}" \
			7 "${usersmenu2options[6]}" \
			8 "${usersmenu2options[7]}" \
			9 "${usersmenu2options[8]}" \
			10 "${usersmenu2options[9]}" \
			11 "${usersmenu2options[10]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) removeUser;;
			2 ) user_check;;
			3 ) group_check;;
			4 ) user_group_check;;
			5 ) addUserToGroup;;
			6 ) addGroup;;
			7 ) removeUserFromGroup;;
			8 ) removeGroup;;
			9 ) userGroupInput usersingroup;;
			10 ) userGroupInput groupsforuser;;
			11 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Users menu
usersMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Users Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${usersmenuoptions[0]}" \
			2 "${usersmenuoptions[1]}" \
			3 "${usersmenuoptions[2]}" \
			4 "${usersmenuoptions[3]}" \
			5 "${usersmenuoptions[4]}" \
			6 "${usersmenuoptions[5]}" \
			7 "${usersmenuoptions[6]}" \
			8 "${usersmenuoptions[7]}" \
			9 "${usersmenuoptions[8]}" \
			10 "${usersmenuoptions[9]}" \
			11 "${usersmenuoptions[10]}" \
			12 "${usersmenuoptions[11]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) addAdditionalAdmins;;
			2 ) addAdditionalUsers;;
			3 ) showUsersInGroup admin;;
			4 ) showHumans;;
			5 ) userchoice="user-full"
				showUsers;;
			6 ) userchoice="user-name"
				showUsers;;
			7 ) userchoice="system-full"
				showUsers;;
			8 ) userchoice="system-name"
				showUsers;;
			9 ) userchoice="group-full"
				showGroups;;
			10 ) userchoice="group-name"
				showGroups;;
			11 ) usersMenu2;;
			12 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Certificate Management menu
certManageMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Certificate Management" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${certmanagemenuoptions[0]}" \
			2 "${certmanagemenuoptions[1]}" \
			3 "${certmanagemenuoptions[2]}" \
			4 "${certmanagemenuoptions[3]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) changeCerts;;
			2 ) renewLetsEncrypt;;
			3 ) addNewCertAuth;;
			4 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Security Management
secManageMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Security Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus." 0 0 0 \
			1 "${secmanagemenuoptions[0]}" \
			2 "${secmanagemenuoptions[1]}" \
			3 "${secmanagemenuoptions[2]}" \
			4 "${secmanagemenuoptions[3]}" \
			5 "${secmanagemenuoptions[4]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) disableSSHPass;;
			2 ) sshKeyGen;;
			3 ) puttyGen;;
			4 ) switchSSH;;
			5 ) return;;
			* ) errorTracking;;
		esac
	done

	return
}


# Main menu
mainMenu()
{
	until [ "$menuselection" = "0" ]; do
		dialog --cr-wrap --clear --no-ok --no-cancel --backtitle "Linux Configuration Utility" --title "Main Menu" --menu "Use the 'Up' and 'Down' keys to navigate, and the 'Enter' key to make your selections.\n\n'Next' and 'Return to' options are provided to move between menus.\n\nVersion $installedversion" 0 0 0 \
			1 "${menuoptions[0]}" \
			2 "${menuoptions[1]}" \
			3 "${menuoptions[2]}" \
			4 "${menuoptions[3]}" \
			5 "${menuoptions[4]}" \
			6 "${menuoptions[5]}" \
			7 "${menuoptions[6]}" \
			8 "${menuoptions[7]}" \
			9 "${menuoptions[8]}" \
			10 "${menuoptions[9]}" \
			11 "${menuoptions[10]}" \
			12 "${menuoptions[11]}" \
			13 "${menuoptions[12]}" \
			14 "${menuoptions[13]}" 2>"${INPUT}"

		menuselection=$(<"${INPUT}")

		case $menuselection in
			1 ) ownCloudMenu;;
			2 ) sambaMenu;;
			3 ) plexMenu;;
			4 ) webminMenu;;
			5 ) webAdminMenu;;
			6 ) virtualBoxMenu;;
			7 ) netdataMenu;;
			8 ) systemMenu;;
			9 ) firewallMenu1;;
			10 ) usersMenu;;
			11 ) certManageMenu;;
			12 ) secManageMenu;;
			13 ) [ -f $INPUT ] && rm $INPUT
				exit;;
			14 ) [ -f $INPUT ] && rm $INPUT
				exitAndReboot;;
			* ) errorTracking;;
		esac
	done

	return
}
