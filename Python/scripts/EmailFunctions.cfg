# Function to gather info about administrator email configuration
getEmailData()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/getEmailData.txt ]; then
		echo "0" > $PWD/flags/getEmailData.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/getEmailData.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		correct="n"
		until [ "$correct" == "y" ]; do
			echo " "
			echo "############ Input administrator email information ############"
			echo "###############################################################"
			echo " "
			read -p "Enter administrator email address, ie: somecallme.tim@gmail.com: " smtplogin
			echo " "
			echo "Email address: $smtplogin"
			smtplogin="$(translateToLowerCase $smtplogin)"
			echo " "
			read -p "Is this correct? y/n: " correct
			if [ "$correct" == "y" ]; then
				echo " "
			else
				errorTracking;
			fi
		done

		beenrun=1
		echo $beenrun > $PWD/flags/getEmailData.txt || error_exit "$LINENO: File edit failed."
		echo $smtplogin > $PWD/flags/AdminEmail.txt || error_exit "$LINENO: File creation failed."
	else
		return
	fi

	return
}


# Function to set email forwarding for root and webmaster system messages
setEmail()
{
	# Check to see if beenrun file exists. If not, create it.
	if [ ! -e $PWD/flags/setEmail.txt ]; then
		echo "0" > $PWD/flags/setEmail.txt || error_exit "$LINENO: File creation failed."
	fi
	beenrun=0

	# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
	read beenrun < $PWD/flags/setEmail.txt || error_exit "$LINENO: Read failed."
	if [ "$beenrun" != 1 ]; then
		echo " "
		echo "############ Enabling system administrator email forwarding ############"
		echo "########################################################################"
		echo " "

		# install logwatch and postfix for system monitoring emails to admins
		sudo apt-get -y install postfix mailutils logwatch libdate-manip-perl || error_exit "$LINENO: Installation failed."
		wait

		# Setting hostname (sender) info
		filestoreplace[$filecount]=/etc/postfix/main.cf
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/postfix/main.cf || error_exit "$LINENO: Setting file permisions failed."
		sudo sed -i "s/myhostname = *.*/myhostname = $fqdn/" /etc/postfix/main.cf || error_exit "$LINENO: File edit failed."
		sudo printf "\nsmtp_use_tls=yes" >> /etc/postfix/main.cf || error_exit "$LINENO: File edit failed."
		sudo sed -i 's/inet_interfaces = all/inet_interfaces = localhost/' /etc/postfix/main.cf || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/postfix/main.cf || error_exit "$LINENO: Setting file permisions failed."
		filecount=$((filecount+1))

		# restart postfix with new config
		sudo systemctl restart postfix.service || error_exit "$LINENO: Postfix restart failed."
		wait

		# Set aliases for email forwarding from system accounts
		filestoreplace[$filecount]=/etc/aliases
		sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
		sudo chmod 777 /etc/aliases || error_exit "$LINENO: Setting file permisions failed."
		sudo printf "\nroot: "$smtplogin"" >> /etc/aliases || error_exit "$LINENO: File edit failed."
		sudo printf "\nwebmaster: "$smtplogin"" >> /etc/aliases || error_exit "$LINENO: File edit failed."
		sudo chmod 644 /etc/aliases || error_exit "$LINENO: Setting file permisions failed."
		filecount=$((filecount+1))

		# activate aliases
		sudo newaliases || error_exit "$LINENO: Aliases activation failed."
		wait

		# test email by sending initial logwatch info
		sudo logwatch --detail Low --mailto $smtplogin --service all --range today || error_exit "$LINENO: email test failed."

		beenrun=1
		echo $beenrun > $PWD/flags/setEmail.txt || error_exit "$LINENO: File edit failed."

		# Remove backed up files after complete
		cleanUpSuccessful;
		wait
	else
		if [ -e $PWD/flags/installApache.txt ]; then
			# Check to see if beenrun file exists. If not, create it.
			if [ ! -e $PWD/flags/setApacheEmail.txt ]; then
				echo "0" > $PWD/flags/setApacheEmail.txt || error_exit "$LINENO: File creation failed."
			fi
			local beenrun2=0

			# Read beenrun file. Run primary function if not run before, skip to else if it has been run already.
			read beenrun2 < $PWD/flags/setApacheEmail.txt || error_exit "$LINENO: Read failed."
			if [ "$beenrun2" != 1 ]; then

				# add directories to logwatch log path information
				filestoreplace[$filecount]=/usr/share/logwatch/default.conf/logwatch.conf
				sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
				sudo sed -i "/LogDir = \\/var\\/log/ a LogDir = \\/var\\/log\\/apache2" /usr/share/logwatch/default.conf/logwatch.conf || error_exit "$LINENO: File edit failed."
				filecount=$((filecount+1))

				# Setting security info
				filestoreplace[$filecount]=/etc/postfix/main.cf
				sudo cp ${filestoreplace[$filecount]} ${filestoreplace[$filecount]}.back || error_exit "$LINENO: File backup failed."
				sudo chmod 777 /etc/postfix/main.cf || error_exit "$LINENO: Setting file permisions failed."
				sudo sed -i "s/ssl-cert-snakeoil.pem/$clientcertificate/" /etc/postfix/main.cf || error_exit "$LINENO: File edit failed."
				sudo sed -i "s/ssl-cert-snakeoil.key/$clientkey/" /etc/postfix/main.cf || error_exit "$LINENO: File edit failed."
				if [ "$combinedcert" == 0 ] && [ -e $PWD/flags/installApache.txt ] && [ -e $PWD/flags/cachainname.txt ]; then
					sudo printf "\nsmtpd_tls_CAfile = /etc/ssl/certs/$clientcachain" >> /etc/postfix/main.cf || error_exit "$LINENO: File edit failed."
				fi
				sudo chmod 644 /etc/postfix/main.cf || error_exit "$LINENO: Setting file permisions failed."
				filecount=$((filecount+1))

				# restart postfix with new config
				sudo systemctl restart postfix.service || error_exit "$LINENO: Postfix restart failed."
				wait

				# test email by sending initial logwatch info
				sudo logwatch --detail Low --mailto $smtplogin --service all --range today || error_exit "$LINENO: email test failed."

				# Remove backed up files after complete
				cleanUpSuccessful;
				wait

				beenrun2=1
				echo $beenrun2 > $PWD/flags/setApacheEmail.txt || error_exit "$LINENO: File edit failed."

			else
				return
			fi

		fi

		return
	fi

	return
}
